
mac-daddies.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000160c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000030  080017ac  080017ac  000117ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080017dc  080017dc  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  080017dc  080017dc  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  080017dc  080017dc  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080017dc  080017dc  000117dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080017e0  080017e0  000117e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  080017e4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000009d8  20000068  0800184c  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000a40  0800184c  00020a40  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY
 13 .debug_info   000023f3  00000000  00000000  000200db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000956  00000000  00000000  000224ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000001d0  00000000  00000000  00022e28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000013f  00000000  00000000  00022ff8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00003fb5  00000000  00000000  00023137  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000294e  00000000  00000000  000270ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000c178  00000000  00000000  00029a3a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000d00  00000000  00000000  00035bb4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007b  00000000  00000000  000368b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000068 	.word	0x20000068
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001794 	.word	0x08001794

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000006c 	.word	0x2000006c
 80001dc:	08001794 	.word	0x08001794

080001e0 <strcmp>:
 80001e0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80001e4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80001e8:	2a01      	cmp	r2, #1
 80001ea:	bf28      	it	cs
 80001ec:	429a      	cmpcs	r2, r3
 80001ee:	d0f7      	beq.n	80001e0 <strcmp>
 80001f0:	1ad0      	subs	r0, r2, r3
 80001f2:	4770      	bx	lr
	...

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <strlen>:
 80002a0:	4603      	mov	r3, r0
 80002a2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002a6:	2a00      	cmp	r2, #0
 80002a8:	d1fb      	bne.n	80002a2 <strlen+0x2>
 80002aa:	1a18      	subs	r0, r3, r0
 80002ac:	3801      	subs	r0, #1
 80002ae:	4770      	bx	lr

080002b0 <channel_monitor_get_state>:
 80002b0:	b480      	push	{r7}
 80002b2:	af00      	add	r7, sp, #0
 80002b4:	4b03      	ldr	r3, [pc, #12]	; (80002c4 <channel_monitor_get_state+0x14>)
 80002b6:	781b      	ldrb	r3, [r3, #0]
 80002b8:	4618      	mov	r0, r3
 80002ba:	46bd      	mov	sp, r7
 80002bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c0:	4770      	bx	lr
 80002c2:	bf00      	nop
 80002c4:	20000004 	.word	0x20000004

080002c8 <channel_monitor_init>:
 80002c8:	b580      	push	{r7, lr}
 80002ca:	af00      	add	r7, sp, #0
 80002cc:	f000 f8d6 	bl	800047c <monitor_led_init>
 80002d0:	f000 f802 	bl	80002d8 <tim4_init>
 80002d4:	bf00      	nop
 80002d6:	bd80      	pop	{r7, pc}

080002d8 <tim4_init>:
 80002d8:	b480      	push	{r7}
 80002da:	af00      	add	r7, sp, #0
 80002dc:	4b33      	ldr	r3, [pc, #204]	; (80003ac <tim4_init+0xd4>)
 80002de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e0:	4a32      	ldr	r2, [pc, #200]	; (80003ac <tim4_init+0xd4>)
 80002e2:	f043 0302 	orr.w	r3, r3, #2
 80002e6:	6313      	str	r3, [r2, #48]	; 0x30
 80002e8:	4b31      	ldr	r3, [pc, #196]	; (80003b0 <tim4_init+0xd8>)
 80002ea:	6a1b      	ldr	r3, [r3, #32]
 80002ec:	4a30      	ldr	r2, [pc, #192]	; (80003b0 <tim4_init+0xd8>)
 80002ee:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80002f2:	6213      	str	r3, [r2, #32]
 80002f4:	4b2e      	ldr	r3, [pc, #184]	; (80003b0 <tim4_init+0xd8>)
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	4a2d      	ldr	r2, [pc, #180]	; (80003b0 <tim4_init+0xd8>)
 80002fa:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80002fe:	6013      	str	r3, [r2, #0]
 8000300:	4b2a      	ldr	r3, [pc, #168]	; (80003ac <tim4_init+0xd4>)
 8000302:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000304:	4a29      	ldr	r2, [pc, #164]	; (80003ac <tim4_init+0xd4>)
 8000306:	f043 0304 	orr.w	r3, r3, #4
 800030a:	6413      	str	r3, [r2, #64]	; 0x40
 800030c:	4b29      	ldr	r3, [pc, #164]	; (80003b4 <tim4_init+0xdc>)
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	699a      	ldr	r2, [r3, #24]
 8000312:	4b28      	ldr	r3, [pc, #160]	; (80003b4 <tim4_init+0xdc>)
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	f022 0203 	bic.w	r2, r2, #3
 800031a:	619a      	str	r2, [r3, #24]
 800031c:	4b25      	ldr	r3, [pc, #148]	; (80003b4 <tim4_init+0xdc>)
 800031e:	681b      	ldr	r3, [r3, #0]
 8000320:	699a      	ldr	r2, [r3, #24]
 8000322:	4b24      	ldr	r3, [pc, #144]	; (80003b4 <tim4_init+0xdc>)
 8000324:	681b      	ldr	r3, [r3, #0]
 8000326:	f042 0201 	orr.w	r2, r2, #1
 800032a:	619a      	str	r2, [r3, #24]
 800032c:	4b21      	ldr	r3, [pc, #132]	; (80003b4 <tim4_init+0xdc>)
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	6a1a      	ldr	r2, [r3, #32]
 8000332:	4b20      	ldr	r3, [pc, #128]	; (80003b4 <tim4_init+0xdc>)
 8000334:	681b      	ldr	r3, [r3, #0]
 8000336:	f022 020a 	bic.w	r2, r2, #10
 800033a:	621a      	str	r2, [r3, #32]
 800033c:	4b1d      	ldr	r3, [pc, #116]	; (80003b4 <tim4_init+0xdc>)
 800033e:	681b      	ldr	r3, [r3, #0]
 8000340:	6a1a      	ldr	r2, [r3, #32]
 8000342:	4b1c      	ldr	r3, [pc, #112]	; (80003b4 <tim4_init+0xdc>)
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	f042 020a 	orr.w	r2, r2, #10
 800034a:	621a      	str	r2, [r3, #32]
 800034c:	4b19      	ldr	r3, [pc, #100]	; (80003b4 <tim4_init+0xdc>)
 800034e:	681b      	ldr	r3, [r3, #0]
 8000350:	699a      	ldr	r2, [r3, #24]
 8000352:	4b18      	ldr	r3, [pc, #96]	; (80003b4 <tim4_init+0xdc>)
 8000354:	681b      	ldr	r3, [r3, #0]
 8000356:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800035a:	619a      	str	r2, [r3, #24]
 800035c:	4b15      	ldr	r3, [pc, #84]	; (80003b4 <tim4_init+0xdc>)
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	f244 42c0 	movw	r2, #17600	; 0x44c0
 8000364:	639a      	str	r2, [r3, #56]	; 0x38
 8000366:	4b13      	ldr	r3, [pc, #76]	; (80003b4 <tim4_init+0xdc>)
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	6a1a      	ldr	r2, [r3, #32]
 800036c:	4b11      	ldr	r3, [pc, #68]	; (80003b4 <tim4_init+0xdc>)
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	f042 0201 	orr.w	r2, r2, #1
 8000374:	621a      	str	r2, [r3, #32]
 8000376:	4b0f      	ldr	r3, [pc, #60]	; (80003b4 <tim4_init+0xdc>)
 8000378:	681b      	ldr	r3, [r3, #0]
 800037a:	68da      	ldr	r2, [r3, #12]
 800037c:	4b0d      	ldr	r3, [pc, #52]	; (80003b4 <tim4_init+0xdc>)
 800037e:	681b      	ldr	r3, [r3, #0]
 8000380:	f042 0206 	orr.w	r2, r2, #6
 8000384:	60da      	str	r2, [r3, #12]
 8000386:	4b0c      	ldr	r3, [pc, #48]	; (80003b8 <tim4_init+0xe0>)
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	4a0b      	ldr	r2, [pc, #44]	; (80003b8 <tim4_init+0xe0>)
 800038c:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000390:	6013      	str	r3, [r2, #0]
 8000392:	4b08      	ldr	r3, [pc, #32]	; (80003b4 <tim4_init+0xdc>)
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	681a      	ldr	r2, [r3, #0]
 8000398:	4b06      	ldr	r3, [pc, #24]	; (80003b4 <tim4_init+0xdc>)
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	f042 0201 	orr.w	r2, r2, #1
 80003a0:	601a      	str	r2, [r3, #0]
 80003a2:	bf00      	nop
 80003a4:	46bd      	mov	sp, r7
 80003a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003aa:	4770      	bx	lr
 80003ac:	40023800 	.word	0x40023800
 80003b0:	40020400 	.word	0x40020400
 80003b4:	20000000 	.word	0x20000000
 80003b8:	e000e100 	.word	0xe000e100

080003bc <TIM4_IRQHandler>:
 80003bc:	b580      	push	{r7, lr}
 80003be:	af00      	add	r7, sp, #0
 80003c0:	4b2a      	ldr	r3, [pc, #168]	; (800046c <TIM4_IRQHandler+0xb0>)
 80003c2:	2201      	movs	r2, #1
 80003c4:	701a      	strb	r2, [r3, #0]
 80003c6:	4b2a      	ldr	r3, [pc, #168]	; (8000470 <TIM4_IRQHandler+0xb4>)
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	691b      	ldr	r3, [r3, #16]
 80003cc:	089a      	lsrs	r2, r3, #2
 80003ce:	4b28      	ldr	r3, [pc, #160]	; (8000470 <TIM4_IRQHandler+0xb4>)
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	68db      	ldr	r3, [r3, #12]
 80003d4:	089b      	lsrs	r3, r3, #2
 80003d6:	4013      	ands	r3, r2
 80003d8:	f003 0301 	and.w	r3, r3, #1
 80003dc:	2b00      	cmp	r3, #0
 80003de:	d012      	beq.n	8000406 <TIM4_IRQHandler+0x4a>
 80003e0:	4b23      	ldr	r3, [pc, #140]	; (8000470 <TIM4_IRQHandler+0xb4>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	68da      	ldr	r2, [r3, #12]
 80003e6:	4b22      	ldr	r3, [pc, #136]	; (8000470 <TIM4_IRQHandler+0xb4>)
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	f022 0204 	bic.w	r2, r2, #4
 80003ee:	60da      	str	r2, [r3, #12]
 80003f0:	4b20      	ldr	r3, [pc, #128]	; (8000474 <TIM4_IRQHandler+0xb8>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	2b00      	cmp	r3, #0
 80003f6:	d003      	beq.n	8000400 <TIM4_IRQHandler+0x44>
 80003f8:	4b1c      	ldr	r3, [pc, #112]	; (800046c <TIM4_IRQHandler+0xb0>)
 80003fa:	2201      	movs	r2, #1
 80003fc:	701a      	strb	r2, [r3, #0]
 80003fe:	e002      	b.n	8000406 <TIM4_IRQHandler+0x4a>
 8000400:	4b1a      	ldr	r3, [pc, #104]	; (800046c <TIM4_IRQHandler+0xb0>)
 8000402:	2202      	movs	r2, #2
 8000404:	701a      	strb	r2, [r3, #0]
 8000406:	4b1a      	ldr	r3, [pc, #104]	; (8000470 <TIM4_IRQHandler+0xb4>)
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	691b      	ldr	r3, [r3, #16]
 800040c:	085a      	lsrs	r2, r3, #1
 800040e:	4b18      	ldr	r3, [pc, #96]	; (8000470 <TIM4_IRQHandler+0xb4>)
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	68db      	ldr	r3, [r3, #12]
 8000414:	085b      	lsrs	r3, r3, #1
 8000416:	4013      	ands	r3, r2
 8000418:	f003 0301 	and.w	r3, r3, #1
 800041c:	2b00      	cmp	r3, #0
 800041e:	d01a      	beq.n	8000456 <TIM4_IRQHandler+0x9a>
 8000420:	4b15      	ldr	r3, [pc, #84]	; (8000478 <TIM4_IRQHandler+0xbc>)
 8000422:	691b      	ldr	r3, [r3, #16]
 8000424:	099b      	lsrs	r3, r3, #6
 8000426:	f003 0301 	and.w	r3, r3, #1
 800042a:	4a12      	ldr	r2, [pc, #72]	; (8000474 <TIM4_IRQHandler+0xb8>)
 800042c:	6013      	str	r3, [r2, #0]
 800042e:	4b10      	ldr	r3, [pc, #64]	; (8000470 <TIM4_IRQHandler+0xb4>)
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000434:	4a0e      	ldr	r2, [pc, #56]	; (8000470 <TIM4_IRQHandler+0xb4>)
 8000436:	6812      	ldr	r2, [r2, #0]
 8000438:	f503 4389 	add.w	r3, r3, #17536	; 0x4480
 800043c:	3340      	adds	r3, #64	; 0x40
 800043e:	6393      	str	r3, [r2, #56]	; 0x38
 8000440:	4b0b      	ldr	r3, [pc, #44]	; (8000470 <TIM4_IRQHandler+0xb4>)
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	68da      	ldr	r2, [r3, #12]
 8000446:	4b0a      	ldr	r3, [pc, #40]	; (8000470 <TIM4_IRQHandler+0xb4>)
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	f042 0204 	orr.w	r2, r2, #4
 800044e:	60da      	str	r2, [r3, #12]
 8000450:	4b06      	ldr	r3, [pc, #24]	; (800046c <TIM4_IRQHandler+0xb0>)
 8000452:	2200      	movs	r2, #0
 8000454:	701a      	strb	r2, [r3, #0]
 8000456:	4b05      	ldr	r3, [pc, #20]	; (800046c <TIM4_IRQHandler+0xb0>)
 8000458:	781b      	ldrb	r3, [r3, #0]
 800045a:	4618      	mov	r0, r3
 800045c:	f000 f83a 	bl	80004d4 <monitor_led_set>
 8000460:	4b03      	ldr	r3, [pc, #12]	; (8000470 <TIM4_IRQHandler+0xb4>)
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	2200      	movs	r2, #0
 8000466:	611a      	str	r2, [r3, #16]
 8000468:	bf00      	nop
 800046a:	bd80      	pop	{r7, pc}
 800046c:	20000004 	.word	0x20000004
 8000470:	20000000 	.word	0x20000000
 8000474:	20000084 	.word	0x20000084
 8000478:	40020400 	.word	0x40020400

0800047c <monitor_led_init>:
 800047c:	b480      	push	{r7}
 800047e:	af00      	add	r7, sp, #0
 8000480:	4b12      	ldr	r3, [pc, #72]	; (80004cc <monitor_led_init+0x50>)
 8000482:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000484:	4a11      	ldr	r2, [pc, #68]	; (80004cc <monitor_led_init+0x50>)
 8000486:	f043 0301 	orr.w	r3, r3, #1
 800048a:	6313      	str	r3, [r2, #48]	; 0x30
 800048c:	4b10      	ldr	r3, [pc, #64]	; (80004d0 <monitor_led_init+0x54>)
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	4a0f      	ldr	r2, [pc, #60]	; (80004d0 <monitor_led_init+0x54>)
 8000492:	f423 7343 	bic.w	r3, r3, #780	; 0x30c
 8000496:	f023 0303 	bic.w	r3, r3, #3
 800049a:	6013      	str	r3, [r2, #0]
 800049c:	4b0c      	ldr	r3, [pc, #48]	; (80004d0 <monitor_led_init+0x54>)
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	4a0b      	ldr	r2, [pc, #44]	; (80004d0 <monitor_led_init+0x54>)
 80004a2:	f043 0301 	orr.w	r3, r3, #1
 80004a6:	6013      	str	r3, [r2, #0]
 80004a8:	4b09      	ldr	r3, [pc, #36]	; (80004d0 <monitor_led_init+0x54>)
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	4a08      	ldr	r2, [pc, #32]	; (80004d0 <monitor_led_init+0x54>)
 80004ae:	f043 0304 	orr.w	r3, r3, #4
 80004b2:	6013      	str	r3, [r2, #0]
 80004b4:	4b06      	ldr	r3, [pc, #24]	; (80004d0 <monitor_led_init+0x54>)
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	4a05      	ldr	r2, [pc, #20]	; (80004d0 <monitor_led_init+0x54>)
 80004ba:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80004be:	6013      	str	r3, [r2, #0]
 80004c0:	bf00      	nop
 80004c2:	46bd      	mov	sp, r7
 80004c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c8:	4770      	bx	lr
 80004ca:	bf00      	nop
 80004cc:	40023800 	.word	0x40023800
 80004d0:	40020000 	.word	0x40020000

080004d4 <monitor_led_set>:
 80004d4:	b480      	push	{r7}
 80004d6:	b083      	sub	sp, #12
 80004d8:	af00      	add	r7, sp, #0
 80004da:	4603      	mov	r3, r0
 80004dc:	71fb      	strb	r3, [r7, #7]
 80004de:	4b15      	ldr	r3, [pc, #84]	; (8000534 <monitor_led_set+0x60>)
 80004e0:	695b      	ldr	r3, [r3, #20]
 80004e2:	4a14      	ldr	r2, [pc, #80]	; (8000534 <monitor_led_set+0x60>)
 80004e4:	f023 0313 	bic.w	r3, r3, #19
 80004e8:	6153      	str	r3, [r2, #20]
 80004ea:	79fb      	ldrb	r3, [r7, #7]
 80004ec:	2b02      	cmp	r3, #2
 80004ee:	d013      	beq.n	8000518 <monitor_led_set+0x44>
 80004f0:	2b02      	cmp	r3, #2
 80004f2:	dc18      	bgt.n	8000526 <monitor_led_set+0x52>
 80004f4:	2b00      	cmp	r3, #0
 80004f6:	d008      	beq.n	800050a <monitor_led_set+0x36>
 80004f8:	2b01      	cmp	r3, #1
 80004fa:	d114      	bne.n	8000526 <monitor_led_set+0x52>
 80004fc:	4b0d      	ldr	r3, [pc, #52]	; (8000534 <monitor_led_set+0x60>)
 80004fe:	695b      	ldr	r3, [r3, #20]
 8000500:	4a0c      	ldr	r2, [pc, #48]	; (8000534 <monitor_led_set+0x60>)
 8000502:	f043 0301 	orr.w	r3, r3, #1
 8000506:	6153      	str	r3, [r2, #20]
 8000508:	e00d      	b.n	8000526 <monitor_led_set+0x52>
 800050a:	4b0a      	ldr	r3, [pc, #40]	; (8000534 <monitor_led_set+0x60>)
 800050c:	695b      	ldr	r3, [r3, #20]
 800050e:	4a09      	ldr	r2, [pc, #36]	; (8000534 <monitor_led_set+0x60>)
 8000510:	f043 0302 	orr.w	r3, r3, #2
 8000514:	6153      	str	r3, [r2, #20]
 8000516:	e006      	b.n	8000526 <monitor_led_set+0x52>
 8000518:	4b06      	ldr	r3, [pc, #24]	; (8000534 <monitor_led_set+0x60>)
 800051a:	695b      	ldr	r3, [r3, #20]
 800051c:	4a05      	ldr	r2, [pc, #20]	; (8000534 <monitor_led_set+0x60>)
 800051e:	f043 0310 	orr.w	r3, r3, #16
 8000522:	6153      	str	r3, [r2, #20]
 8000524:	bf00      	nop
 8000526:	bf00      	nop
 8000528:	370c      	adds	r7, #12
 800052a:	46bd      	mov	sp, r7
 800052c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000530:	4770      	bx	lr
 8000532:	bf00      	nop
 8000534:	40020000 	.word	0x40020000

08000538 <main>:

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void) {
 8000538:	b580      	push	{r7, lr}
 800053a:	af00      	add	r7, sp, #0
	init_usart2(57600,F_CPU);
 800053c:	4908      	ldr	r1, [pc, #32]	; (8000560 <main+0x28>)
 800053e:	f44f 4061 	mov.w	r0, #57600	; 0xe100
 8000542:	f000 fa43 	bl	80009cc <init_usart2>

	printf("Test print\n");
 8000546:	4807      	ldr	r0, [pc, #28]	; (8000564 <main+0x2c>)
 8000548:	f000 fc44 	bl	8000dd4 <puts>
	// NOTE: for some reason prints are not working, does
	// the UART get interrupted ?
	channel_monitor_init();
 800054c:	f7ff febc 	bl	80002c8 <channel_monitor_init>
	transmit_init();
 8000550:	f000 f914 	bl	800077c <transmit_init>


    /* Loop forever */
	while(1) {
		printf("looping!\n");
 8000554:	4804      	ldr	r0, [pc, #16]	; (8000568 <main+0x30>)
 8000556:	f000 fc3d 	bl	8000dd4 <puts>
		get_transmission();
 800055a:	f000 f871 	bl	8000640 <get_transmission>
		printf("looping!\n");
 800055e:	e7f9      	b.n	8000554 <main+0x1c>
 8000560:	00f42400 	.word	0x00f42400
 8000564:	080017ac 	.word	0x080017ac
 8000568:	080017b8 	.word	0x080017b8

0800056c <_close>:
 800056c:	b480      	push	{r7}
 800056e:	b083      	sub	sp, #12
 8000570:	af00      	add	r7, sp, #0
 8000572:	6078      	str	r0, [r7, #4]
 8000574:	f04f 33ff 	mov.w	r3, #4294967295
 8000578:	4618      	mov	r0, r3
 800057a:	370c      	adds	r7, #12
 800057c:	46bd      	mov	sp, r7
 800057e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000582:	4770      	bx	lr

08000584 <_fstat>:
 8000584:	b480      	push	{r7}
 8000586:	b083      	sub	sp, #12
 8000588:	af00      	add	r7, sp, #0
 800058a:	6078      	str	r0, [r7, #4]
 800058c:	6039      	str	r1, [r7, #0]
 800058e:	683b      	ldr	r3, [r7, #0]
 8000590:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000594:	605a      	str	r2, [r3, #4]
 8000596:	2300      	movs	r3, #0
 8000598:	4618      	mov	r0, r3
 800059a:	370c      	adds	r7, #12
 800059c:	46bd      	mov	sp, r7
 800059e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005a2:	4770      	bx	lr

080005a4 <_isatty>:
 80005a4:	b480      	push	{r7}
 80005a6:	b083      	sub	sp, #12
 80005a8:	af00      	add	r7, sp, #0
 80005aa:	6078      	str	r0, [r7, #4]
 80005ac:	2301      	movs	r3, #1
 80005ae:	4618      	mov	r0, r3
 80005b0:	370c      	adds	r7, #12
 80005b2:	46bd      	mov	sp, r7
 80005b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b8:	4770      	bx	lr

080005ba <_lseek>:
 80005ba:	b480      	push	{r7}
 80005bc:	b085      	sub	sp, #20
 80005be:	af00      	add	r7, sp, #0
 80005c0:	60f8      	str	r0, [r7, #12]
 80005c2:	60b9      	str	r1, [r7, #8]
 80005c4:	607a      	str	r2, [r7, #4]
 80005c6:	2300      	movs	r3, #0
 80005c8:	4618      	mov	r0, r3
 80005ca:	3714      	adds	r7, #20
 80005cc:	46bd      	mov	sp, r7
 80005ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d2:	4770      	bx	lr

080005d4 <_sbrk>:
 80005d4:	b580      	push	{r7, lr}
 80005d6:	b086      	sub	sp, #24
 80005d8:	af00      	add	r7, sp, #0
 80005da:	6078      	str	r0, [r7, #4]
 80005dc:	4a14      	ldr	r2, [pc, #80]	; (8000630 <_sbrk+0x5c>)
 80005de:	4b15      	ldr	r3, [pc, #84]	; (8000634 <_sbrk+0x60>)
 80005e0:	1ad3      	subs	r3, r2, r3
 80005e2:	617b      	str	r3, [r7, #20]
 80005e4:	697b      	ldr	r3, [r7, #20]
 80005e6:	613b      	str	r3, [r7, #16]
 80005e8:	4b13      	ldr	r3, [pc, #76]	; (8000638 <_sbrk+0x64>)
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	2b00      	cmp	r3, #0
 80005ee:	d102      	bne.n	80005f6 <_sbrk+0x22>
 80005f0:	4b11      	ldr	r3, [pc, #68]	; (8000638 <_sbrk+0x64>)
 80005f2:	4a12      	ldr	r2, [pc, #72]	; (800063c <_sbrk+0x68>)
 80005f4:	601a      	str	r2, [r3, #0]
 80005f6:	4b10      	ldr	r3, [pc, #64]	; (8000638 <_sbrk+0x64>)
 80005f8:	681a      	ldr	r2, [r3, #0]
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	4413      	add	r3, r2
 80005fe:	693a      	ldr	r2, [r7, #16]
 8000600:	429a      	cmp	r2, r3
 8000602:	d207      	bcs.n	8000614 <_sbrk+0x40>
 8000604:	f000 fe48 	bl	8001298 <__errno>
 8000608:	4603      	mov	r3, r0
 800060a:	220c      	movs	r2, #12
 800060c:	601a      	str	r2, [r3, #0]
 800060e:	f04f 33ff 	mov.w	r3, #4294967295
 8000612:	e009      	b.n	8000628 <_sbrk+0x54>
 8000614:	4b08      	ldr	r3, [pc, #32]	; (8000638 <_sbrk+0x64>)
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	60fb      	str	r3, [r7, #12]
 800061a:	4b07      	ldr	r3, [pc, #28]	; (8000638 <_sbrk+0x64>)
 800061c:	681a      	ldr	r2, [r3, #0]
 800061e:	687b      	ldr	r3, [r7, #4]
 8000620:	4413      	add	r3, r2
 8000622:	4a05      	ldr	r2, [pc, #20]	; (8000638 <_sbrk+0x64>)
 8000624:	6013      	str	r3, [r2, #0]
 8000626:	68fb      	ldr	r3, [r7, #12]
 8000628:	4618      	mov	r0, r3
 800062a:	3718      	adds	r7, #24
 800062c:	46bd      	mov	sp, r7
 800062e:	bd80      	pop	{r7, pc}
 8000630:	20020000 	.word	0x20020000
 8000634:	00000400 	.word	0x00000400
 8000638:	20000088 	.word	0x20000088
 800063c:	20000a40 	.word	0x20000a40

08000640 <get_transmission>:
static volatile uint32_t* const nvic_iser = (uint32_t*)NVIC_ISER;


int transmit_halfbits(void);

int get_transmission(void){
 8000640:	b580      	push	{r7, lr}
 8000642:	b088      	sub	sp, #32
 8000644:	af00      	add	r7, sp, #0

	//check if 0 if it is then write 101010101010 a bunch of time set length to whatever and then do an early return

	//Prompt user and grab input
	printf("\nEnter a message: \n");
 8000646:	4847      	ldr	r0, [pc, #284]	; (8000764 <get_transmission+0x124>)
 8000648:	f000 fbc4 	bl	8000dd4 <puts>
	fgets(userInput, sizeof(userInput), stdin);
 800064c:	4b46      	ldr	r3, [pc, #280]	; (8000768 <get_transmission+0x128>)
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	685b      	ldr	r3, [r3, #4]
 8000652:	461a      	mov	r2, r3
 8000654:	2164      	movs	r1, #100	; 0x64
 8000656:	4845      	ldr	r0, [pc, #276]	; (800076c <get_transmission+0x12c>)
 8000658:	f000 fa9c 	bl	8000b94 <fgets>

	//Getting rid of the newline char
	int len = strlen(userInput);
 800065c:	4843      	ldr	r0, [pc, #268]	; (800076c <get_transmission+0x12c>)
 800065e:	f7ff fe1f 	bl	80002a0 <strlen>
 8000662:	4603      	mov	r3, r0
 8000664:	60fb      	str	r3, [r7, #12]
	if (len > 0 && userInput[len - 1] == '\n') {
 8000666:	68fb      	ldr	r3, [r7, #12]
 8000668:	2b00      	cmp	r3, #0
 800066a:	dd0a      	ble.n	8000682 <get_transmission+0x42>
 800066c:	68fb      	ldr	r3, [r7, #12]
 800066e:	3b01      	subs	r3, #1
 8000670:	4a3e      	ldr	r2, [pc, #248]	; (800076c <get_transmission+0x12c>)
 8000672:	5cd3      	ldrb	r3, [r2, r3]
 8000674:	2b0a      	cmp	r3, #10
 8000676:	d104      	bne.n	8000682 <get_transmission+0x42>
	     userInput[len - 1] = '\0';
 8000678:	68fb      	ldr	r3, [r7, #12]
 800067a:	3b01      	subs	r3, #1
 800067c:	4a3b      	ldr	r2, [pc, #236]	; (800076c <get_transmission+0x12c>)
 800067e:	2100      	movs	r1, #0
 8000680:	54d1      	strb	r1, [r2, r3]
	}
	//Encode the message and add it to the transmission buffer
	int bufferIndex = 0;
 8000682:	2300      	movs	r3, #0
 8000684:	61fb      	str	r3, [r7, #28]

	//char nullstring[] = "";
	if(!strcmp(userInput, "\\0")){
 8000686:	493a      	ldr	r1, [pc, #232]	; (8000770 <get_transmission+0x130>)
 8000688:	4838      	ldr	r0, [pc, #224]	; (800076c <get_transmission+0x12c>)
 800068a:	f7ff fda9 	bl	80001e0 <strcmp>
 800068e:	4603      	mov	r3, r0
 8000690:	2b00      	cmp	r3, #0
 8000692:	d127      	bne.n	80006e4 <get_transmission+0xa4>
		for(int i =0; i < 255; i++){
 8000694:	2300      	movs	r3, #0
 8000696:	61bb      	str	r3, [r7, #24]
 8000698:	e015      	b.n	80006c6 <get_transmission+0x86>
			uint16_t null_write = 0;
 800069a:	2300      	movs	r3, #0
 800069c:	80fb      	strh	r3, [r7, #6]
			transmissionBuffer[bufferIndex] = null_write ^ 1;		// first half of Manchester bit
 800069e:	88fb      	ldrh	r3, [r7, #6]
 80006a0:	f083 0301 	eor.w	r3, r3, #1
 80006a4:	b299      	uxth	r1, r3
 80006a6:	4a33      	ldr	r2, [pc, #204]	; (8000774 <get_transmission+0x134>)
 80006a8:	69fb      	ldr	r3, [r7, #28]
 80006aa:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			transmissionBuffer[bufferIndex+1] = null_write ^ 0;   // second half of Manchester bit
 80006ae:	69fb      	ldr	r3, [r7, #28]
 80006b0:	3301      	adds	r3, #1
 80006b2:	4930      	ldr	r1, [pc, #192]	; (8000774 <get_transmission+0x134>)
 80006b4:	88fa      	ldrh	r2, [r7, #6]
 80006b6:	f821 2013 	strh.w	r2, [r1, r3, lsl #1]
			bufferIndex += 2; // advance the pointer twice
 80006ba:	69fb      	ldr	r3, [r7, #28]
 80006bc:	3302      	adds	r3, #2
 80006be:	61fb      	str	r3, [r7, #28]
		for(int i =0; i < 255; i++){
 80006c0:	69bb      	ldr	r3, [r7, #24]
 80006c2:	3301      	adds	r3, #1
 80006c4:	61bb      	str	r3, [r7, #24]
 80006c6:	69bb      	ldr	r3, [r7, #24]
 80006c8:	2bfe      	cmp	r3, #254	; 0xfe
 80006ca:	dde6      	ble.n	800069a <get_transmission+0x5a>
		}
		transmission_length = strlen(userInput) * BITS_PER_CHAR * 2;
 80006cc:	4827      	ldr	r0, [pc, #156]	; (800076c <get_transmission+0x12c>)
 80006ce:	f7ff fde7 	bl	80002a0 <strlen>
 80006d2:	4603      	mov	r3, r0
 80006d4:	011b      	lsls	r3, r3, #4
 80006d6:	461a      	mov	r2, r3
 80006d8:	4b27      	ldr	r3, [pc, #156]	; (8000778 <get_transmission+0x138>)
 80006da:	601a      	str	r2, [r3, #0]

		return transmit_halfbits();
 80006dc:	f000 f8d4 	bl	8000888 <transmit_halfbits>
 80006e0:	4603      	mov	r3, r0
 80006e2:	e03b      	b.n	800075c <get_transmission+0x11c>
	}


	for (int i = 0; i < len; i++) {
 80006e4:	2300      	movs	r3, #0
 80006e6:	617b      	str	r3, [r7, #20]
 80006e8:	e029      	b.n	800073e <get_transmission+0xfe>

		char currentChar = userInput[i];
 80006ea:	4a20      	ldr	r2, [pc, #128]	; (800076c <get_transmission+0x12c>)
 80006ec:	697b      	ldr	r3, [r7, #20]
 80006ee:	4413      	add	r3, r2
 80006f0:	781b      	ldrb	r3, [r3, #0]
 80006f2:	72fb      	strb	r3, [r7, #11]
		int j = (sizeof(char)*8) - 1;
 80006f4:	2307      	movs	r3, #7
 80006f6:	613b      	str	r3, [r7, #16]
		while(j >= 0) {
 80006f8:	e01b      	b.n	8000732 <get_transmission+0xf2>
			uint16_t to_write = (currentChar >> j) & 1;
 80006fa:	7afa      	ldrb	r2, [r7, #11]
 80006fc:	693b      	ldr	r3, [r7, #16]
 80006fe:	fa42 f303 	asr.w	r3, r2, r3
 8000702:	b29b      	uxth	r3, r3
 8000704:	f003 0301 	and.w	r3, r3, #1
 8000708:	813b      	strh	r3, [r7, #8]
			transmissionBuffer[bufferIndex] = to_write ^ 1;		// first half of Manchester bit
 800070a:	893b      	ldrh	r3, [r7, #8]
 800070c:	f083 0301 	eor.w	r3, r3, #1
 8000710:	b299      	uxth	r1, r3
 8000712:	4a18      	ldr	r2, [pc, #96]	; (8000774 <get_transmission+0x134>)
 8000714:	69fb      	ldr	r3, [r7, #28]
 8000716:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			transmissionBuffer[bufferIndex+1] = to_write ^ 0;   // second half of Manchester bit
 800071a:	69fb      	ldr	r3, [r7, #28]
 800071c:	3301      	adds	r3, #1
 800071e:	4915      	ldr	r1, [pc, #84]	; (8000774 <get_transmission+0x134>)
 8000720:	893a      	ldrh	r2, [r7, #8]
 8000722:	f821 2013 	strh.w	r2, [r1, r3, lsl #1]
			bufferIndex += 2; // advance the pointer twice
 8000726:	69fb      	ldr	r3, [r7, #28]
 8000728:	3302      	adds	r3, #2
 800072a:	61fb      	str	r3, [r7, #28]
			j--;
 800072c:	693b      	ldr	r3, [r7, #16]
 800072e:	3b01      	subs	r3, #1
 8000730:	613b      	str	r3, [r7, #16]
		while(j >= 0) {
 8000732:	693b      	ldr	r3, [r7, #16]
 8000734:	2b00      	cmp	r3, #0
 8000736:	dae0      	bge.n	80006fa <get_transmission+0xba>
	for (int i = 0; i < len; i++) {
 8000738:	697b      	ldr	r3, [r7, #20]
 800073a:	3301      	adds	r3, #1
 800073c:	617b      	str	r3, [r7, #20]
 800073e:	697a      	ldr	r2, [r7, #20]
 8000740:	68fb      	ldr	r3, [r7, #12]
 8000742:	429a      	cmp	r2, r3
 8000744:	dbd1      	blt.n	80006ea <get_transmission+0xaa>

	/*
	 * size of the transmission buffer is the length of the input times the
	 * number of bits in a byte times the number of bits in one baud (Manchester)
	 */
	transmission_length = strlen(userInput) * BITS_PER_CHAR * 2;
 8000746:	4809      	ldr	r0, [pc, #36]	; (800076c <get_transmission+0x12c>)
 8000748:	f7ff fdaa 	bl	80002a0 <strlen>
 800074c:	4603      	mov	r3, r0
 800074e:	011b      	lsls	r3, r3, #4
 8000750:	461a      	mov	r2, r3
 8000752:	4b09      	ldr	r3, [pc, #36]	; (8000778 <get_transmission+0x138>)
 8000754:	601a      	str	r2, [r3, #0]
	return transmit_halfbits();
 8000756:	f000 f897 	bl	8000888 <transmit_halfbits>
 800075a:	4603      	mov	r3, r0

}
 800075c:	4618      	mov	r0, r3
 800075e:	3720      	adds	r7, #32
 8000760:	46bd      	mov	sp, r7
 8000762:	bd80      	pop	{r7, pc}
 8000764:	080017c4 	.word	0x080017c4
 8000768:	20000064 	.word	0x20000064
 800076c:	2000008c 	.word	0x2000008c
 8000770:	080017d8 	.word	0x080017d8
 8000774:	200000f0 	.word	0x200000f0
 8000778:	20000008 	.word	0x20000008

0800077c <transmit_init>:


void transmit_init() {
 800077c:	b480      	push	{r7}
 800077e:	af00      	add	r7, sp, #0
	rcc->AHB1ENR |= GPIOA_EN;			// enable GPIOA
 8000780:	4b1a      	ldr	r3, [pc, #104]	; (80007ec <transmit_init+0x70>)
 8000782:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000784:	4a19      	ldr	r2, [pc, #100]	; (80007ec <transmit_init+0x70>)
 8000786:	f043 0301 	orr.w	r3, r3, #1
 800078a:	6313      	str	r3, [r2, #48]	; 0x30

	// NOTE: do not think this is necessary
//	gpioa->AFRL  |= (0b0010 << 6 * 4); 	// PA6 is AF02 (TIM3_CH1)
//	gpioa->MODER |= (0b10 << 6*2);		// PA6 is in AF mode
	gpioa->MODER  &= ~(0b11 << 6*2);
 800078c:	4b18      	ldr	r3, [pc, #96]	; (80007f0 <transmit_init+0x74>)
 800078e:	681b      	ldr	r3, [r3, #0]
 8000790:	4a17      	ldr	r2, [pc, #92]	; (80007f0 <transmit_init+0x74>)
 8000792:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000796:	6013      	str	r3, [r2, #0]
	gpioa->MODER  |=  (0b01 << 6*2);	// PA6 is in output mode
 8000798:	4b15      	ldr	r3, [pc, #84]	; (80007f0 <transmit_init+0x74>)
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	4a14      	ldr	r2, [pc, #80]	; (80007f0 <transmit_init+0x74>)
 800079e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80007a2:	6013      	str	r3, [r2, #0]
	gpioa->ODR    |=  (1 << 6);
 80007a4:	4b12      	ldr	r3, [pc, #72]	; (80007f0 <transmit_init+0x74>)
 80007a6:	695b      	ldr	r3, [r3, #20]
 80007a8:	4a11      	ldr	r2, [pc, #68]	; (80007f0 <transmit_init+0x74>)
 80007aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007ae:	6153      	str	r3, [r2, #20]

	// NOTE: not sure if this is necessary either?
	//gpioa->IDR 	  |=  (0b01 << 6); 		// line starts high?


	rcc->APB1ENR |= TIM3_EN;			// enable TIM3
 80007b0:	4b0e      	ldr	r3, [pc, #56]	; (80007ec <transmit_init+0x70>)
 80007b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80007b4:	4a0d      	ldr	r2, [pc, #52]	; (80007ec <transmit_init+0x70>)
 80007b6:	f043 0302 	orr.w	r3, r3, #2
 80007ba:	6413      	str	r3, [r2, #64]	; 0x40

	tim3->CCMR1 &= ~(0b11 << 0);		// clear CC1S bits, tim3_ch1 is in output mode
 80007bc:	4b0d      	ldr	r3, [pc, #52]	; (80007f4 <transmit_init+0x78>)
 80007be:	699b      	ldr	r3, [r3, #24]
 80007c0:	4a0c      	ldr	r2, [pc, #48]	; (80007f4 <transmit_init+0x78>)
 80007c2:	f023 0303 	bic.w	r3, r3, #3
 80007c6:	6193      	str	r3, [r2, #24]
	//tim3->CCR1 = HALF_BIT_PERIOD;		// interrupt fires on HALF_BIT_PERIOD

	nvic_iser[0] |= (1 << 29);			// TIM3 global interrupt is vector 29
 80007c8:	4b0b      	ldr	r3, [pc, #44]	; (80007f8 <transmit_init+0x7c>)
 80007ca:	681b      	ldr	r3, [r3, #0]
 80007cc:	4a0a      	ldr	r2, [pc, #40]	; (80007f8 <transmit_init+0x7c>)
 80007ce:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80007d2:	6013      	str	r3, [r2, #0]
	tim3->CR1 |= 0b01;					// Start the timer
 80007d4:	4b07      	ldr	r3, [pc, #28]	; (80007f4 <transmit_init+0x78>)
 80007d6:	681b      	ldr	r3, [r3, #0]
 80007d8:	4a06      	ldr	r2, [pc, #24]	; (80007f4 <transmit_init+0x78>)
 80007da:	f043 0301 	orr.w	r3, r3, #1
 80007de:	6013      	str	r3, [r2, #0]
}
 80007e0:	bf00      	nop
 80007e2:	46bd      	mov	sp, r7
 80007e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007e8:	4770      	bx	lr
 80007ea:	bf00      	nop
 80007ec:	40023800 	.word	0x40023800
 80007f0:	40020000 	.word	0x40020000
 80007f4:	40000400 	.word	0x40000400
 80007f8:	e000e100 	.word	0xe000e100

080007fc <TIM3_IRQHandler>:

/*
 * TIMER3 IRQ is supposed to iterate through the transmission buffer
 * and write the value to the IDR.
 */
void TIM3_IRQHandler(void) {
 80007fc:	b580      	push	{r7, lr}
 80007fe:	af00      	add	r7, sp, #0

	tim3->SR=0;
 8000800:	4b1c      	ldr	r3, [pc, #112]	; (8000874 <TIM3_IRQHandler+0x78>)
 8000802:	2200      	movs	r2, #0
 8000804:	611a      	str	r2, [r3, #16]

	static int buffer_position = 0;

	if(channel_monitor_get_state() == COLLISION || buffer_position == transmission_length) {
 8000806:	f7ff fd53 	bl	80002b0 <channel_monitor_get_state>
 800080a:	4603      	mov	r3, r0
 800080c:	2b02      	cmp	r3, #2
 800080e:	d005      	beq.n	800081c <TIM3_IRQHandler+0x20>
 8000810:	4b19      	ldr	r3, [pc, #100]	; (8000878 <TIM3_IRQHandler+0x7c>)
 8000812:	681a      	ldr	r2, [r3, #0]
 8000814:	4b19      	ldr	r3, [pc, #100]	; (800087c <TIM3_IRQHandler+0x80>)
 8000816:	681b      	ldr	r3, [r3, #0]
 8000818:	429a      	cmp	r2, r3
 800081a:	d112      	bne.n	8000842 <TIM3_IRQHandler+0x46>
	//if(channel_monitor_get_state() == BUSY || buffer_position == 8) {

		tim3->DIER &= ~(0b01 << 1); // disable interrupts
 800081c:	4b15      	ldr	r3, [pc, #84]	; (8000874 <TIM3_IRQHandler+0x78>)
 800081e:	68db      	ldr	r3, [r3, #12]
 8000820:	4a14      	ldr	r2, [pc, #80]	; (8000874 <TIM3_IRQHandler+0x78>)
 8000822:	f023 0302 	bic.w	r3, r3, #2
 8000826:	60d3      	str	r3, [r2, #12]
		transmission_length = -1;  	// don't transmit
 8000828:	4b14      	ldr	r3, [pc, #80]	; (800087c <TIM3_IRQHandler+0x80>)
 800082a:	f04f 32ff 	mov.w	r2, #4294967295
 800082e:	601a      	str	r2, [r3, #0]
		buffer_position = 0;	   	// reset the buffer position
 8000830:	4b11      	ldr	r3, [pc, #68]	; (8000878 <TIM3_IRQHandler+0x7c>)
 8000832:	2200      	movs	r2, #0
 8000834:	601a      	str	r2, [r3, #0]
		gpioa->ODR |= 1 << 6;		// let the line go high
 8000836:	4b12      	ldr	r3, [pc, #72]	; (8000880 <TIM3_IRQHandler+0x84>)
 8000838:	695b      	ldr	r3, [r3, #20]
 800083a:	4a11      	ldr	r2, [pc, #68]	; (8000880 <TIM3_IRQHandler+0x84>)
 800083c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000840:	6153      	str	r3, [r2, #20]
	}

	tim3->CCR1 += HALF_BIT_PERIOD;  // next interrupt fires last time + 500uS
 8000842:	4b0c      	ldr	r3, [pc, #48]	; (8000874 <TIM3_IRQHandler+0x78>)
 8000844:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000846:	4a0b      	ldr	r2, [pc, #44]	; (8000874 <TIM3_IRQHandler+0x78>)
 8000848:	f503 53fc 	add.w	r3, r3, #8064	; 0x1f80
 800084c:	3310      	adds	r3, #16
 800084e:	6353      	str	r3, [r2, #52]	; 0x34

	gpioa->BSRR = (1 << (6 + 16*(1 - transmissionBuffer[buffer_position++])));
 8000850:	4b09      	ldr	r3, [pc, #36]	; (8000878 <TIM3_IRQHandler+0x7c>)
 8000852:	681b      	ldr	r3, [r3, #0]
 8000854:	1c5a      	adds	r2, r3, #1
 8000856:	4908      	ldr	r1, [pc, #32]	; (8000878 <TIM3_IRQHandler+0x7c>)
 8000858:	600a      	str	r2, [r1, #0]
 800085a:	4a0a      	ldr	r2, [pc, #40]	; (8000884 <TIM3_IRQHandler+0x88>)
 800085c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000860:	f1c3 0301 	rsb	r3, r3, #1
 8000864:	011b      	lsls	r3, r3, #4
 8000866:	3306      	adds	r3, #6
 8000868:	2201      	movs	r2, #1
 800086a:	409a      	lsls	r2, r3
 800086c:	4b04      	ldr	r3, [pc, #16]	; (8000880 <TIM3_IRQHandler+0x84>)
 800086e:	619a      	str	r2, [r3, #24]
}
 8000870:	bf00      	nop
 8000872:	bd80      	pop	{r7, pc}
 8000874:	40000400 	.word	0x40000400
 8000878:	200008f0 	.word	0x200008f0
 800087c:	20000008 	.word	0x20000008
 8000880:	40020000 	.word	0x40020000
 8000884:	200000f0 	.word	0x200000f0

08000888 <transmit_halfbits>:

int transmit_halfbits(void) {
 8000888:	b580      	push	{r7, lr}
 800088a:	af00      	add	r7, sp, #0
	if(transmission_length < 0) {
 800088c:	4b0c      	ldr	r3, [pc, #48]	; (80008c0 <transmit_halfbits+0x38>)
 800088e:	681b      	ldr	r3, [r3, #0]
 8000890:	2b00      	cmp	r3, #0
 8000892:	da02      	bge.n	800089a <transmit_halfbits+0x12>
		return -1;
 8000894:	f04f 33ff 	mov.w	r3, #4294967295
 8000898:	e010      	b.n	80008bc <transmit_halfbits+0x34>
	}

	while(channel_monitor_get_state() == BUSY) {};
 800089a:	bf00      	nop
 800089c:	f7ff fd08 	bl	80002b0 <channel_monitor_get_state>
 80008a0:	4603      	mov	r3, r0
 80008a2:	2b00      	cmp	r3, #0
 80008a4:	d0fa      	beq.n	800089c <transmit_halfbits+0x14>

	tim3->CCR1 = (tim3->CNT); // trigger on current time + 500uS
 80008a6:	4b07      	ldr	r3, [pc, #28]	; (80008c4 <transmit_halfbits+0x3c>)
 80008a8:	4a06      	ldr	r2, [pc, #24]	; (80008c4 <transmit_halfbits+0x3c>)
 80008aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80008ac:	6353      	str	r3, [r2, #52]	; 0x34
	tim3->DIER |= 0b01 << 1;  // enable interrupts on channel 1
 80008ae:	4b05      	ldr	r3, [pc, #20]	; (80008c4 <transmit_halfbits+0x3c>)
 80008b0:	68db      	ldr	r3, [r3, #12]
 80008b2:	4a04      	ldr	r2, [pc, #16]	; (80008c4 <transmit_halfbits+0x3c>)
 80008b4:	f043 0302 	orr.w	r3, r3, #2
 80008b8:	60d3      	str	r3, [r2, #12]
	return 0;
 80008ba:	2300      	movs	r3, #0
}
 80008bc:	4618      	mov	r0, r3
 80008be:	bd80      	pop	{r7, pc}
 80008c0:	20000008 	.word	0x20000008
 80008c4:	40000400 	.word	0x40000400

080008c8 <_read>:
 80008c8:	b580      	push	{r7, lr}
 80008ca:	b086      	sub	sp, #24
 80008cc:	af00      	add	r7, sp, #0
 80008ce:	60f8      	str	r0, [r7, #12]
 80008d0:	60b9      	str	r1, [r7, #8]
 80008d2:	607a      	str	r2, [r7, #4]
 80008d4:	2300      	movs	r3, #0
 80008d6:	613b      	str	r3, [r7, #16]
 80008d8:	2300      	movs	r3, #0
 80008da:	617b      	str	r3, [r7, #20]
 80008dc:	e012      	b.n	8000904 <_read+0x3c>
 80008de:	693b      	ldr	r3, [r7, #16]
 80008e0:	3301      	adds	r3, #1
 80008e2:	613b      	str	r3, [r7, #16]
 80008e4:	f000 f836 	bl	8000954 <usart2_getch>
 80008e8:	4603      	mov	r3, r0
 80008ea:	461a      	mov	r2, r3
 80008ec:	68bb      	ldr	r3, [r7, #8]
 80008ee:	701a      	strb	r2, [r3, #0]
 80008f0:	68bb      	ldr	r3, [r7, #8]
 80008f2:	781b      	ldrb	r3, [r3, #0]
 80008f4:	2b0a      	cmp	r3, #10
 80008f6:	d00a      	beq.n	800090e <_read+0x46>
 80008f8:	68bb      	ldr	r3, [r7, #8]
 80008fa:	3301      	adds	r3, #1
 80008fc:	60bb      	str	r3, [r7, #8]
 80008fe:	697b      	ldr	r3, [r7, #20]
 8000900:	3301      	adds	r3, #1
 8000902:	617b      	str	r3, [r7, #20]
 8000904:	697a      	ldr	r2, [r7, #20]
 8000906:	687b      	ldr	r3, [r7, #4]
 8000908:	429a      	cmp	r2, r3
 800090a:	dbe8      	blt.n	80008de <_read+0x16>
 800090c:	e000      	b.n	8000910 <_read+0x48>
 800090e:	bf00      	nop
 8000910:	693b      	ldr	r3, [r7, #16]
 8000912:	4618      	mov	r0, r3
 8000914:	3718      	adds	r7, #24
 8000916:	46bd      	mov	sp, r7
 8000918:	bd80      	pop	{r7, pc}

0800091a <_write>:
 800091a:	b580      	push	{r7, lr}
 800091c:	b086      	sub	sp, #24
 800091e:	af00      	add	r7, sp, #0
 8000920:	60f8      	str	r0, [r7, #12]
 8000922:	60b9      	str	r1, [r7, #8]
 8000924:	607a      	str	r2, [r7, #4]
 8000926:	2300      	movs	r3, #0
 8000928:	617b      	str	r3, [r7, #20]
 800092a:	e009      	b.n	8000940 <_write+0x26>
 800092c:	68bb      	ldr	r3, [r7, #8]
 800092e:	1c5a      	adds	r2, r3, #1
 8000930:	60ba      	str	r2, [r7, #8]
 8000932:	781b      	ldrb	r3, [r3, #0]
 8000934:	4618      	mov	r0, r3
 8000936:	f000 f82f 	bl	8000998 <usart2_putch>
 800093a:	697b      	ldr	r3, [r7, #20]
 800093c:	3301      	adds	r3, #1
 800093e:	617b      	str	r3, [r7, #20]
 8000940:	697a      	ldr	r2, [r7, #20]
 8000942:	687b      	ldr	r3, [r7, #4]
 8000944:	429a      	cmp	r2, r3
 8000946:	dbf1      	blt.n	800092c <_write+0x12>
 8000948:	687b      	ldr	r3, [r7, #4]
 800094a:	4618      	mov	r0, r3
 800094c:	3718      	adds	r7, #24
 800094e:	46bd      	mov	sp, r7
 8000950:	bd80      	pop	{r7, pc}
	...

08000954 <usart2_getch>:
 8000954:	b580      	push	{r7, lr}
 8000956:	b082      	sub	sp, #8
 8000958:	af00      	add	r7, sp, #0
 800095a:	bf00      	nop
 800095c:	4b0c      	ldr	r3, [pc, #48]	; (8000990 <usart2_getch+0x3c>)
 800095e:	681b      	ldr	r3, [r3, #0]
 8000960:	f003 0320 	and.w	r3, r3, #32
 8000964:	2b20      	cmp	r3, #32
 8000966:	d1f9      	bne.n	800095c <usart2_getch+0x8>
 8000968:	4b0a      	ldr	r3, [pc, #40]	; (8000994 <usart2_getch+0x40>)
 800096a:	681b      	ldr	r3, [r3, #0]
 800096c:	71fb      	strb	r3, [r7, #7]
 800096e:	79fb      	ldrb	r3, [r7, #7]
 8000970:	4618      	mov	r0, r3
 8000972:	f000 f811 	bl	8000998 <usart2_putch>
 8000976:	79fb      	ldrb	r3, [r7, #7]
 8000978:	2b0d      	cmp	r3, #13
 800097a:	d104      	bne.n	8000986 <usart2_getch+0x32>
 800097c:	200a      	movs	r0, #10
 800097e:	f000 f80b 	bl	8000998 <usart2_putch>
 8000982:	230a      	movs	r3, #10
 8000984:	71fb      	strb	r3, [r7, #7]
 8000986:	79fb      	ldrb	r3, [r7, #7]
 8000988:	4618      	mov	r0, r3
 800098a:	3708      	adds	r7, #8
 800098c:	46bd      	mov	sp, r7
 800098e:	bd80      	pop	{r7, pc}
 8000990:	40004400 	.word	0x40004400
 8000994:	40004404 	.word	0x40004404

08000998 <usart2_putch>:
 8000998:	b480      	push	{r7}
 800099a:	b083      	sub	sp, #12
 800099c:	af00      	add	r7, sp, #0
 800099e:	4603      	mov	r3, r0
 80009a0:	71fb      	strb	r3, [r7, #7]
 80009a2:	bf00      	nop
 80009a4:	4b07      	ldr	r3, [pc, #28]	; (80009c4 <usart2_putch+0x2c>)
 80009a6:	681b      	ldr	r3, [r3, #0]
 80009a8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80009ac:	2b80      	cmp	r3, #128	; 0x80
 80009ae:	d1f9      	bne.n	80009a4 <usart2_putch+0xc>
 80009b0:	4a05      	ldr	r2, [pc, #20]	; (80009c8 <usart2_putch+0x30>)
 80009b2:	79fb      	ldrb	r3, [r7, #7]
 80009b4:	6013      	str	r3, [r2, #0]
 80009b6:	bf00      	nop
 80009b8:	370c      	adds	r7, #12
 80009ba:	46bd      	mov	sp, r7
 80009bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009c0:	4770      	bx	lr
 80009c2:	bf00      	nop
 80009c4:	40004400 	.word	0x40004400
 80009c8:	40004404 	.word	0x40004404

080009cc <init_usart2>:
 80009cc:	b580      	push	{r7, lr}
 80009ce:	b082      	sub	sp, #8
 80009d0:	af00      	add	r7, sp, #0
 80009d2:	6078      	str	r0, [r7, #4]
 80009d4:	6039      	str	r1, [r7, #0]
 80009d6:	4b20      	ldr	r3, [pc, #128]	; (8000a58 <init_usart2+0x8c>)
 80009d8:	681b      	ldr	r3, [r3, #0]
 80009da:	4a1f      	ldr	r2, [pc, #124]	; (8000a58 <init_usart2+0x8c>)
 80009dc:	f043 0301 	orr.w	r3, r3, #1
 80009e0:	6013      	str	r3, [r2, #0]
 80009e2:	4b1e      	ldr	r3, [pc, #120]	; (8000a5c <init_usart2+0x90>)
 80009e4:	681b      	ldr	r3, [r3, #0]
 80009e6:	4a1d      	ldr	r2, [pc, #116]	; (8000a5c <init_usart2+0x90>)
 80009e8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80009ec:	6013      	str	r3, [r2, #0]
 80009ee:	4b1c      	ldr	r3, [pc, #112]	; (8000a60 <init_usart2+0x94>)
 80009f0:	681b      	ldr	r3, [r3, #0]
 80009f2:	4a1b      	ldr	r2, [pc, #108]	; (8000a60 <init_usart2+0x94>)
 80009f4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80009f8:	6013      	str	r3, [r2, #0]
 80009fa:	4b19      	ldr	r3, [pc, #100]	; (8000a60 <init_usart2+0x94>)
 80009fc:	681b      	ldr	r3, [r3, #0]
 80009fe:	4a18      	ldr	r2, [pc, #96]	; (8000a60 <init_usart2+0x94>)
 8000a00:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 8000a04:	6013      	str	r3, [r2, #0]
 8000a06:	4b17      	ldr	r3, [pc, #92]	; (8000a64 <init_usart2+0x98>)
 8000a08:	681b      	ldr	r3, [r3, #0]
 8000a0a:	4a16      	ldr	r2, [pc, #88]	; (8000a64 <init_usart2+0x98>)
 8000a0c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000a10:	6013      	str	r3, [r2, #0]
 8000a12:	4b14      	ldr	r3, [pc, #80]	; (8000a64 <init_usart2+0x98>)
 8000a14:	681b      	ldr	r3, [r3, #0]
 8000a16:	4a13      	ldr	r2, [pc, #76]	; (8000a64 <init_usart2+0x98>)
 8000a18:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8000a1c:	6013      	str	r3, [r2, #0]
 8000a1e:	4b12      	ldr	r3, [pc, #72]	; (8000a68 <init_usart2+0x9c>)
 8000a20:	f242 020c 	movw	r2, #8204	; 0x200c
 8000a24:	601a      	str	r2, [r3, #0]
 8000a26:	4b11      	ldr	r3, [pc, #68]	; (8000a6c <init_usart2+0xa0>)
 8000a28:	2200      	movs	r2, #0
 8000a2a:	601a      	str	r2, [r3, #0]
 8000a2c:	4b10      	ldr	r3, [pc, #64]	; (8000a70 <init_usart2+0xa4>)
 8000a2e:	2200      	movs	r2, #0
 8000a30:	601a      	str	r2, [r3, #0]
 8000a32:	4910      	ldr	r1, [pc, #64]	; (8000a74 <init_usart2+0xa8>)
 8000a34:	683a      	ldr	r2, [r7, #0]
 8000a36:	687b      	ldr	r3, [r7, #4]
 8000a38:	fbb2 f3f3 	udiv	r3, r2, r3
 8000a3c:	600b      	str	r3, [r1, #0]
 8000a3e:	4b0e      	ldr	r3, [pc, #56]	; (8000a78 <init_usart2+0xac>)
 8000a40:	681b      	ldr	r3, [r3, #0]
 8000a42:	6898      	ldr	r0, [r3, #8]
 8000a44:	2300      	movs	r3, #0
 8000a46:	2202      	movs	r2, #2
 8000a48:	2100      	movs	r1, #0
 8000a4a:	f000 fa51 	bl	8000ef0 <setvbuf>
 8000a4e:	bf00      	nop
 8000a50:	3708      	adds	r7, #8
 8000a52:	46bd      	mov	sp, r7
 8000a54:	bd80      	pop	{r7, pc}
 8000a56:	bf00      	nop
 8000a58:	40023830 	.word	0x40023830
 8000a5c:	40023840 	.word	0x40023840
 8000a60:	40020020 	.word	0x40020020
 8000a64:	40020000 	.word	0x40020000
 8000a68:	4000440c 	.word	0x4000440c
 8000a6c:	40004410 	.word	0x40004410
 8000a70:	40004414 	.word	0x40004414
 8000a74:	40004408 	.word	0x40004408
 8000a78:	20000064 	.word	0x20000064

08000a7c <Reset_Handler>:
 8000a7c:	480d      	ldr	r0, [pc, #52]	; (8000ab4 <LoopForever+0x2>)
 8000a7e:	4685      	mov	sp, r0
 8000a80:	f3af 8000 	nop.w
 8000a84:	480c      	ldr	r0, [pc, #48]	; (8000ab8 <LoopForever+0x6>)
 8000a86:	490d      	ldr	r1, [pc, #52]	; (8000abc <LoopForever+0xa>)
 8000a88:	4a0d      	ldr	r2, [pc, #52]	; (8000ac0 <LoopForever+0xe>)
 8000a8a:	2300      	movs	r3, #0
 8000a8c:	e002      	b.n	8000a94 <LoopCopyDataInit>

08000a8e <CopyDataInit>:
 8000a8e:	58d4      	ldr	r4, [r2, r3]
 8000a90:	50c4      	str	r4, [r0, r3]
 8000a92:	3304      	adds	r3, #4

08000a94 <LoopCopyDataInit>:
 8000a94:	18c4      	adds	r4, r0, r3
 8000a96:	428c      	cmp	r4, r1
 8000a98:	d3f9      	bcc.n	8000a8e <CopyDataInit>
 8000a9a:	4a0a      	ldr	r2, [pc, #40]	; (8000ac4 <LoopForever+0x12>)
 8000a9c:	4c0a      	ldr	r4, [pc, #40]	; (8000ac8 <LoopForever+0x16>)
 8000a9e:	2300      	movs	r3, #0
 8000aa0:	e001      	b.n	8000aa6 <LoopFillZerobss>

08000aa2 <FillZerobss>:
 8000aa2:	6013      	str	r3, [r2, #0]
 8000aa4:	3204      	adds	r2, #4

08000aa6 <LoopFillZerobss>:
 8000aa6:	42a2      	cmp	r2, r4
 8000aa8:	d3fb      	bcc.n	8000aa2 <FillZerobss>
 8000aaa:	f000 fbfb 	bl	80012a4 <__libc_init_array>
 8000aae:	f7ff fd43 	bl	8000538 <main>

08000ab2 <LoopForever>:
 8000ab2:	e7fe      	b.n	8000ab2 <LoopForever>
 8000ab4:	20020000 	.word	0x20020000
 8000ab8:	20000000 	.word	0x20000000
 8000abc:	20000068 	.word	0x20000068
 8000ac0:	080017e4 	.word	0x080017e4
 8000ac4:	20000068 	.word	0x20000068
 8000ac8:	20000a40 	.word	0x20000a40

08000acc <ADC_IRQHandler>:
 8000acc:	e7fe      	b.n	8000acc <ADC_IRQHandler>

08000ace <_fgets_r>:
 8000ace:	2a01      	cmp	r2, #1
 8000ad0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ad4:	4681      	mov	r9, r0
 8000ad6:	460d      	mov	r5, r1
 8000ad8:	4617      	mov	r7, r2
 8000ada:	461c      	mov	r4, r3
 8000adc:	dc03      	bgt.n	8000ae6 <_fgets_r+0x18>
 8000ade:	2500      	movs	r5, #0
 8000ae0:	4628      	mov	r0, r5
 8000ae2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ae6:	b118      	cbz	r0, 8000af0 <_fgets_r+0x22>
 8000ae8:	6a03      	ldr	r3, [r0, #32]
 8000aea:	b90b      	cbnz	r3, 8000af0 <_fgets_r+0x22>
 8000aec:	f000 f8e8 	bl	8000cc0 <__sinit>
 8000af0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000af2:	07de      	lsls	r6, r3, #31
 8000af4:	d405      	bmi.n	8000b02 <_fgets_r+0x34>
 8000af6:	89a3      	ldrh	r3, [r4, #12]
 8000af8:	0598      	lsls	r0, r3, #22
 8000afa:	d402      	bmi.n	8000b02 <_fgets_r+0x34>
 8000afc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000afe:	f000 fbf6 	bl	80012ee <__retarget_lock_acquire_recursive>
 8000b02:	3f01      	subs	r7, #1
 8000b04:	46a8      	mov	r8, r5
 8000b06:	6866      	ldr	r6, [r4, #4]
 8000b08:	b996      	cbnz	r6, 8000b30 <_fgets_r+0x62>
 8000b0a:	4621      	mov	r1, r4
 8000b0c:	4648      	mov	r0, r9
 8000b0e:	f000 f977 	bl	8000e00 <__srefill_r>
 8000b12:	b160      	cbz	r0, 8000b2e <_fgets_r+0x60>
 8000b14:	45a8      	cmp	r8, r5
 8000b16:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000b18:	d138      	bne.n	8000b8c <_fgets_r+0xbe>
 8000b1a:	07d9      	lsls	r1, r3, #31
 8000b1c:	d4df      	bmi.n	8000ade <_fgets_r+0x10>
 8000b1e:	89a5      	ldrh	r5, [r4, #12]
 8000b20:	f415 7500 	ands.w	r5, r5, #512	; 0x200
 8000b24:	d1db      	bne.n	8000ade <_fgets_r+0x10>
 8000b26:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000b28:	f000 fbe2 	bl	80012f0 <__retarget_lock_release_recursive>
 8000b2c:	e7d8      	b.n	8000ae0 <_fgets_r+0x12>
 8000b2e:	6866      	ldr	r6, [r4, #4]
 8000b30:	f8d4 a000 	ldr.w	sl, [r4]
 8000b34:	42be      	cmp	r6, r7
 8000b36:	bf28      	it	cs
 8000b38:	463e      	movcs	r6, r7
 8000b3a:	4632      	mov	r2, r6
 8000b3c:	210a      	movs	r1, #10
 8000b3e:	4650      	mov	r0, sl
 8000b40:	f7ff fb5e 	bl	8000200 <memchr>
 8000b44:	6863      	ldr	r3, [r4, #4]
 8000b46:	b1a0      	cbz	r0, 8000b72 <_fgets_r+0xa4>
 8000b48:	3001      	adds	r0, #1
 8000b4a:	eba0 060a 	sub.w	r6, r0, sl
 8000b4e:	1b9b      	subs	r3, r3, r6
 8000b50:	e9c4 0300 	strd	r0, r3, [r4]
 8000b54:	4632      	mov	r2, r6
 8000b56:	4651      	mov	r1, sl
 8000b58:	4640      	mov	r0, r8
 8000b5a:	f000 fbca 	bl	80012f2 <memcpy>
 8000b5e:	2300      	movs	r3, #0
 8000b60:	f808 3006 	strb.w	r3, [r8, r6]
 8000b64:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000b66:	07da      	lsls	r2, r3, #31
 8000b68:	d4ba      	bmi.n	8000ae0 <_fgets_r+0x12>
 8000b6a:	89a3      	ldrh	r3, [r4, #12]
 8000b6c:	059b      	lsls	r3, r3, #22
 8000b6e:	d4b7      	bmi.n	8000ae0 <_fgets_r+0x12>
 8000b70:	e7d9      	b.n	8000b26 <_fgets_r+0x58>
 8000b72:	1b9b      	subs	r3, r3, r6
 8000b74:	6063      	str	r3, [r4, #4]
 8000b76:	6823      	ldr	r3, [r4, #0]
 8000b78:	4433      	add	r3, r6
 8000b7a:	4640      	mov	r0, r8
 8000b7c:	6023      	str	r3, [r4, #0]
 8000b7e:	4632      	mov	r2, r6
 8000b80:	4651      	mov	r1, sl
 8000b82:	f000 fbb6 	bl	80012f2 <memcpy>
 8000b86:	1bbf      	subs	r7, r7, r6
 8000b88:	44b0      	add	r8, r6
 8000b8a:	d1bc      	bne.n	8000b06 <_fgets_r+0x38>
 8000b8c:	2300      	movs	r3, #0
 8000b8e:	f888 3000 	strb.w	r3, [r8]
 8000b92:	e7e7      	b.n	8000b64 <_fgets_r+0x96>

08000b94 <fgets>:
 8000b94:	4613      	mov	r3, r2
 8000b96:	460a      	mov	r2, r1
 8000b98:	4601      	mov	r1, r0
 8000b9a:	4802      	ldr	r0, [pc, #8]	; (8000ba4 <fgets+0x10>)
 8000b9c:	6800      	ldr	r0, [r0, #0]
 8000b9e:	f7ff bf96 	b.w	8000ace <_fgets_r>
 8000ba2:	bf00      	nop
 8000ba4:	20000064 	.word	0x20000064

08000ba8 <std>:
 8000ba8:	2300      	movs	r3, #0
 8000baa:	b510      	push	{r4, lr}
 8000bac:	4604      	mov	r4, r0
 8000bae:	e9c0 3300 	strd	r3, r3, [r0]
 8000bb2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000bb6:	6083      	str	r3, [r0, #8]
 8000bb8:	8181      	strh	r1, [r0, #12]
 8000bba:	6643      	str	r3, [r0, #100]	; 0x64
 8000bbc:	81c2      	strh	r2, [r0, #14]
 8000bbe:	6183      	str	r3, [r0, #24]
 8000bc0:	4619      	mov	r1, r3
 8000bc2:	2208      	movs	r2, #8
 8000bc4:	305c      	adds	r0, #92	; 0x5c
 8000bc6:	f000 fb19 	bl	80011fc <memset>
 8000bca:	4b0d      	ldr	r3, [pc, #52]	; (8000c00 <std+0x58>)
 8000bcc:	6263      	str	r3, [r4, #36]	; 0x24
 8000bce:	4b0d      	ldr	r3, [pc, #52]	; (8000c04 <std+0x5c>)
 8000bd0:	62a3      	str	r3, [r4, #40]	; 0x28
 8000bd2:	4b0d      	ldr	r3, [pc, #52]	; (8000c08 <std+0x60>)
 8000bd4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000bd6:	4b0d      	ldr	r3, [pc, #52]	; (8000c0c <std+0x64>)
 8000bd8:	6323      	str	r3, [r4, #48]	; 0x30
 8000bda:	4b0d      	ldr	r3, [pc, #52]	; (8000c10 <std+0x68>)
 8000bdc:	6224      	str	r4, [r4, #32]
 8000bde:	429c      	cmp	r4, r3
 8000be0:	d006      	beq.n	8000bf0 <std+0x48>
 8000be2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000be6:	4294      	cmp	r4, r2
 8000be8:	d002      	beq.n	8000bf0 <std+0x48>
 8000bea:	33d0      	adds	r3, #208	; 0xd0
 8000bec:	429c      	cmp	r4, r3
 8000bee:	d105      	bne.n	8000bfc <std+0x54>
 8000bf0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000bf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000bf8:	f000 bb78 	b.w	80012ec <__retarget_lock_init_recursive>
 8000bfc:	bd10      	pop	{r4, pc}
 8000bfe:	bf00      	nop
 8000c00:	0800104d 	.word	0x0800104d
 8000c04:	0800106f 	.word	0x0800106f
 8000c08:	080010a7 	.word	0x080010a7
 8000c0c:	080010cb 	.word	0x080010cb
 8000c10:	200008f4 	.word	0x200008f4

08000c14 <stdio_exit_handler>:
 8000c14:	4a02      	ldr	r2, [pc, #8]	; (8000c20 <stdio_exit_handler+0xc>)
 8000c16:	4903      	ldr	r1, [pc, #12]	; (8000c24 <stdio_exit_handler+0x10>)
 8000c18:	4803      	ldr	r0, [pc, #12]	; (8000c28 <stdio_exit_handler+0x14>)
 8000c1a:	f000 b869 	b.w	8000cf0 <_fwalk_sglue>
 8000c1e:	bf00      	nop
 8000c20:	2000000c 	.word	0x2000000c
 8000c24:	0800161d 	.word	0x0800161d
 8000c28:	20000018 	.word	0x20000018

08000c2c <cleanup_stdio>:
 8000c2c:	6841      	ldr	r1, [r0, #4]
 8000c2e:	4b0c      	ldr	r3, [pc, #48]	; (8000c60 <cleanup_stdio+0x34>)
 8000c30:	4299      	cmp	r1, r3
 8000c32:	b510      	push	{r4, lr}
 8000c34:	4604      	mov	r4, r0
 8000c36:	d001      	beq.n	8000c3c <cleanup_stdio+0x10>
 8000c38:	f000 fcf0 	bl	800161c <_fflush_r>
 8000c3c:	68a1      	ldr	r1, [r4, #8]
 8000c3e:	4b09      	ldr	r3, [pc, #36]	; (8000c64 <cleanup_stdio+0x38>)
 8000c40:	4299      	cmp	r1, r3
 8000c42:	d002      	beq.n	8000c4a <cleanup_stdio+0x1e>
 8000c44:	4620      	mov	r0, r4
 8000c46:	f000 fce9 	bl	800161c <_fflush_r>
 8000c4a:	68e1      	ldr	r1, [r4, #12]
 8000c4c:	4b06      	ldr	r3, [pc, #24]	; (8000c68 <cleanup_stdio+0x3c>)
 8000c4e:	4299      	cmp	r1, r3
 8000c50:	d004      	beq.n	8000c5c <cleanup_stdio+0x30>
 8000c52:	4620      	mov	r0, r4
 8000c54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c58:	f000 bce0 	b.w	800161c <_fflush_r>
 8000c5c:	bd10      	pop	{r4, pc}
 8000c5e:	bf00      	nop
 8000c60:	200008f4 	.word	0x200008f4
 8000c64:	2000095c 	.word	0x2000095c
 8000c68:	200009c4 	.word	0x200009c4

08000c6c <global_stdio_init.part.0>:
 8000c6c:	b510      	push	{r4, lr}
 8000c6e:	4b0b      	ldr	r3, [pc, #44]	; (8000c9c <global_stdio_init.part.0+0x30>)
 8000c70:	4c0b      	ldr	r4, [pc, #44]	; (8000ca0 <global_stdio_init.part.0+0x34>)
 8000c72:	4a0c      	ldr	r2, [pc, #48]	; (8000ca4 <global_stdio_init.part.0+0x38>)
 8000c74:	601a      	str	r2, [r3, #0]
 8000c76:	4620      	mov	r0, r4
 8000c78:	2200      	movs	r2, #0
 8000c7a:	2104      	movs	r1, #4
 8000c7c:	f7ff ff94 	bl	8000ba8 <std>
 8000c80:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000c84:	2201      	movs	r2, #1
 8000c86:	2109      	movs	r1, #9
 8000c88:	f7ff ff8e 	bl	8000ba8 <std>
 8000c8c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000c90:	2202      	movs	r2, #2
 8000c92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c96:	2112      	movs	r1, #18
 8000c98:	f7ff bf86 	b.w	8000ba8 <std>
 8000c9c:	20000a2c 	.word	0x20000a2c
 8000ca0:	200008f4 	.word	0x200008f4
 8000ca4:	08000c15 	.word	0x08000c15

08000ca8 <__sfp_lock_acquire>:
 8000ca8:	4801      	ldr	r0, [pc, #4]	; (8000cb0 <__sfp_lock_acquire+0x8>)
 8000caa:	f000 bb20 	b.w	80012ee <__retarget_lock_acquire_recursive>
 8000cae:	bf00      	nop
 8000cb0:	20000a35 	.word	0x20000a35

08000cb4 <__sfp_lock_release>:
 8000cb4:	4801      	ldr	r0, [pc, #4]	; (8000cbc <__sfp_lock_release+0x8>)
 8000cb6:	f000 bb1b 	b.w	80012f0 <__retarget_lock_release_recursive>
 8000cba:	bf00      	nop
 8000cbc:	20000a35 	.word	0x20000a35

08000cc0 <__sinit>:
 8000cc0:	b510      	push	{r4, lr}
 8000cc2:	4604      	mov	r4, r0
 8000cc4:	f7ff fff0 	bl	8000ca8 <__sfp_lock_acquire>
 8000cc8:	6a23      	ldr	r3, [r4, #32]
 8000cca:	b11b      	cbz	r3, 8000cd4 <__sinit+0x14>
 8000ccc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000cd0:	f7ff bff0 	b.w	8000cb4 <__sfp_lock_release>
 8000cd4:	4b04      	ldr	r3, [pc, #16]	; (8000ce8 <__sinit+0x28>)
 8000cd6:	6223      	str	r3, [r4, #32]
 8000cd8:	4b04      	ldr	r3, [pc, #16]	; (8000cec <__sinit+0x2c>)
 8000cda:	681b      	ldr	r3, [r3, #0]
 8000cdc:	2b00      	cmp	r3, #0
 8000cde:	d1f5      	bne.n	8000ccc <__sinit+0xc>
 8000ce0:	f7ff ffc4 	bl	8000c6c <global_stdio_init.part.0>
 8000ce4:	e7f2      	b.n	8000ccc <__sinit+0xc>
 8000ce6:	bf00      	nop
 8000ce8:	08000c2d 	.word	0x08000c2d
 8000cec:	20000a2c 	.word	0x20000a2c

08000cf0 <_fwalk_sglue>:
 8000cf0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000cf4:	4607      	mov	r7, r0
 8000cf6:	4688      	mov	r8, r1
 8000cf8:	4614      	mov	r4, r2
 8000cfa:	2600      	movs	r6, #0
 8000cfc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000d00:	f1b9 0901 	subs.w	r9, r9, #1
 8000d04:	d505      	bpl.n	8000d12 <_fwalk_sglue+0x22>
 8000d06:	6824      	ldr	r4, [r4, #0]
 8000d08:	2c00      	cmp	r4, #0
 8000d0a:	d1f7      	bne.n	8000cfc <_fwalk_sglue+0xc>
 8000d0c:	4630      	mov	r0, r6
 8000d0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000d12:	89ab      	ldrh	r3, [r5, #12]
 8000d14:	2b01      	cmp	r3, #1
 8000d16:	d907      	bls.n	8000d28 <_fwalk_sglue+0x38>
 8000d18:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000d1c:	3301      	adds	r3, #1
 8000d1e:	d003      	beq.n	8000d28 <_fwalk_sglue+0x38>
 8000d20:	4629      	mov	r1, r5
 8000d22:	4638      	mov	r0, r7
 8000d24:	47c0      	blx	r8
 8000d26:	4306      	orrs	r6, r0
 8000d28:	3568      	adds	r5, #104	; 0x68
 8000d2a:	e7e9      	b.n	8000d00 <_fwalk_sglue+0x10>

08000d2c <_puts_r>:
 8000d2c:	6a03      	ldr	r3, [r0, #32]
 8000d2e:	b570      	push	{r4, r5, r6, lr}
 8000d30:	6884      	ldr	r4, [r0, #8]
 8000d32:	4605      	mov	r5, r0
 8000d34:	460e      	mov	r6, r1
 8000d36:	b90b      	cbnz	r3, 8000d3c <_puts_r+0x10>
 8000d38:	f7ff ffc2 	bl	8000cc0 <__sinit>
 8000d3c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000d3e:	07db      	lsls	r3, r3, #31
 8000d40:	d405      	bmi.n	8000d4e <_puts_r+0x22>
 8000d42:	89a3      	ldrh	r3, [r4, #12]
 8000d44:	0598      	lsls	r0, r3, #22
 8000d46:	d402      	bmi.n	8000d4e <_puts_r+0x22>
 8000d48:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000d4a:	f000 fad0 	bl	80012ee <__retarget_lock_acquire_recursive>
 8000d4e:	89a3      	ldrh	r3, [r4, #12]
 8000d50:	0719      	lsls	r1, r3, #28
 8000d52:	d513      	bpl.n	8000d7c <_puts_r+0x50>
 8000d54:	6923      	ldr	r3, [r4, #16]
 8000d56:	b18b      	cbz	r3, 8000d7c <_puts_r+0x50>
 8000d58:	3e01      	subs	r6, #1
 8000d5a:	68a3      	ldr	r3, [r4, #8]
 8000d5c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000d60:	3b01      	subs	r3, #1
 8000d62:	60a3      	str	r3, [r4, #8]
 8000d64:	b9e9      	cbnz	r1, 8000da2 <_puts_r+0x76>
 8000d66:	2b00      	cmp	r3, #0
 8000d68:	da2e      	bge.n	8000dc8 <_puts_r+0x9c>
 8000d6a:	4622      	mov	r2, r4
 8000d6c:	210a      	movs	r1, #10
 8000d6e:	4628      	mov	r0, r5
 8000d70:	f000 f9af 	bl	80010d2 <__swbuf_r>
 8000d74:	3001      	adds	r0, #1
 8000d76:	d007      	beq.n	8000d88 <_puts_r+0x5c>
 8000d78:	250a      	movs	r5, #10
 8000d7a:	e007      	b.n	8000d8c <_puts_r+0x60>
 8000d7c:	4621      	mov	r1, r4
 8000d7e:	4628      	mov	r0, r5
 8000d80:	f000 f9e4 	bl	800114c <__swsetup_r>
 8000d84:	2800      	cmp	r0, #0
 8000d86:	d0e7      	beq.n	8000d58 <_puts_r+0x2c>
 8000d88:	f04f 35ff 	mov.w	r5, #4294967295
 8000d8c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000d8e:	07da      	lsls	r2, r3, #31
 8000d90:	d405      	bmi.n	8000d9e <_puts_r+0x72>
 8000d92:	89a3      	ldrh	r3, [r4, #12]
 8000d94:	059b      	lsls	r3, r3, #22
 8000d96:	d402      	bmi.n	8000d9e <_puts_r+0x72>
 8000d98:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000d9a:	f000 faa9 	bl	80012f0 <__retarget_lock_release_recursive>
 8000d9e:	4628      	mov	r0, r5
 8000da0:	bd70      	pop	{r4, r5, r6, pc}
 8000da2:	2b00      	cmp	r3, #0
 8000da4:	da04      	bge.n	8000db0 <_puts_r+0x84>
 8000da6:	69a2      	ldr	r2, [r4, #24]
 8000da8:	429a      	cmp	r2, r3
 8000daa:	dc06      	bgt.n	8000dba <_puts_r+0x8e>
 8000dac:	290a      	cmp	r1, #10
 8000dae:	d004      	beq.n	8000dba <_puts_r+0x8e>
 8000db0:	6823      	ldr	r3, [r4, #0]
 8000db2:	1c5a      	adds	r2, r3, #1
 8000db4:	6022      	str	r2, [r4, #0]
 8000db6:	7019      	strb	r1, [r3, #0]
 8000db8:	e7cf      	b.n	8000d5a <_puts_r+0x2e>
 8000dba:	4622      	mov	r2, r4
 8000dbc:	4628      	mov	r0, r5
 8000dbe:	f000 f988 	bl	80010d2 <__swbuf_r>
 8000dc2:	3001      	adds	r0, #1
 8000dc4:	d1c9      	bne.n	8000d5a <_puts_r+0x2e>
 8000dc6:	e7df      	b.n	8000d88 <_puts_r+0x5c>
 8000dc8:	6823      	ldr	r3, [r4, #0]
 8000dca:	250a      	movs	r5, #10
 8000dcc:	1c5a      	adds	r2, r3, #1
 8000dce:	6022      	str	r2, [r4, #0]
 8000dd0:	701d      	strb	r5, [r3, #0]
 8000dd2:	e7db      	b.n	8000d8c <_puts_r+0x60>

08000dd4 <puts>:
 8000dd4:	4b02      	ldr	r3, [pc, #8]	; (8000de0 <puts+0xc>)
 8000dd6:	4601      	mov	r1, r0
 8000dd8:	6818      	ldr	r0, [r3, #0]
 8000dda:	f7ff bfa7 	b.w	8000d2c <_puts_r>
 8000dde:	bf00      	nop
 8000de0:	20000064 	.word	0x20000064

08000de4 <lflush>:
 8000de4:	898b      	ldrh	r3, [r1, #12]
 8000de6:	f003 0309 	and.w	r3, r3, #9
 8000dea:	2b09      	cmp	r3, #9
 8000dec:	d103      	bne.n	8000df6 <lflush+0x12>
 8000dee:	4b03      	ldr	r3, [pc, #12]	; (8000dfc <lflush+0x18>)
 8000df0:	6818      	ldr	r0, [r3, #0]
 8000df2:	f000 bc13 	b.w	800161c <_fflush_r>
 8000df6:	2000      	movs	r0, #0
 8000df8:	4770      	bx	lr
 8000dfa:	bf00      	nop
 8000dfc:	20000064 	.word	0x20000064

08000e00 <__srefill_r>:
 8000e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e02:	460c      	mov	r4, r1
 8000e04:	4605      	mov	r5, r0
 8000e06:	b118      	cbz	r0, 8000e10 <__srefill_r+0x10>
 8000e08:	6a03      	ldr	r3, [r0, #32]
 8000e0a:	b90b      	cbnz	r3, 8000e10 <__srefill_r+0x10>
 8000e0c:	f7ff ff58 	bl	8000cc0 <__sinit>
 8000e10:	2300      	movs	r3, #0
 8000e12:	6063      	str	r3, [r4, #4]
 8000e14:	89a3      	ldrh	r3, [r4, #12]
 8000e16:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000e1a:	069e      	lsls	r6, r3, #26
 8000e1c:	d502      	bpl.n	8000e24 <__srefill_r+0x24>
 8000e1e:	f04f 30ff 	mov.w	r0, #4294967295
 8000e22:	e05c      	b.n	8000ede <__srefill_r+0xde>
 8000e24:	0758      	lsls	r0, r3, #29
 8000e26:	d448      	bmi.n	8000eba <__srefill_r+0xba>
 8000e28:	06d9      	lsls	r1, r3, #27
 8000e2a:	d405      	bmi.n	8000e38 <__srefill_r+0x38>
 8000e2c:	2309      	movs	r3, #9
 8000e2e:	602b      	str	r3, [r5, #0]
 8000e30:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000e34:	81a3      	strh	r3, [r4, #12]
 8000e36:	e7f2      	b.n	8000e1e <__srefill_r+0x1e>
 8000e38:	071a      	lsls	r2, r3, #28
 8000e3a:	d50b      	bpl.n	8000e54 <__srefill_r+0x54>
 8000e3c:	4621      	mov	r1, r4
 8000e3e:	4628      	mov	r0, r5
 8000e40:	f000 fbec 	bl	800161c <_fflush_r>
 8000e44:	2800      	cmp	r0, #0
 8000e46:	d1ea      	bne.n	8000e1e <__srefill_r+0x1e>
 8000e48:	89a3      	ldrh	r3, [r4, #12]
 8000e4a:	60a0      	str	r0, [r4, #8]
 8000e4c:	f023 0308 	bic.w	r3, r3, #8
 8000e50:	81a3      	strh	r3, [r4, #12]
 8000e52:	61a0      	str	r0, [r4, #24]
 8000e54:	89a3      	ldrh	r3, [r4, #12]
 8000e56:	f043 0304 	orr.w	r3, r3, #4
 8000e5a:	81a3      	strh	r3, [r4, #12]
 8000e5c:	6923      	ldr	r3, [r4, #16]
 8000e5e:	b91b      	cbnz	r3, 8000e68 <__srefill_r+0x68>
 8000e60:	4621      	mov	r1, r4
 8000e62:	4628      	mov	r0, r5
 8000e64:	f000 fc28 	bl	80016b8 <__smakebuf_r>
 8000e68:	89a6      	ldrh	r6, [r4, #12]
 8000e6a:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 8000e6e:	07b3      	lsls	r3, r6, #30
 8000e70:	d00f      	beq.n	8000e92 <__srefill_r+0x92>
 8000e72:	2301      	movs	r3, #1
 8000e74:	4a1b      	ldr	r2, [pc, #108]	; (8000ee4 <__srefill_r+0xe4>)
 8000e76:	491c      	ldr	r1, [pc, #112]	; (8000ee8 <__srefill_r+0xe8>)
 8000e78:	481c      	ldr	r0, [pc, #112]	; (8000eec <__srefill_r+0xec>)
 8000e7a:	81a3      	strh	r3, [r4, #12]
 8000e7c:	f006 0609 	and.w	r6, r6, #9
 8000e80:	f7ff ff36 	bl	8000cf0 <_fwalk_sglue>
 8000e84:	2e09      	cmp	r6, #9
 8000e86:	81a7      	strh	r7, [r4, #12]
 8000e88:	d103      	bne.n	8000e92 <__srefill_r+0x92>
 8000e8a:	4621      	mov	r1, r4
 8000e8c:	4628      	mov	r0, r5
 8000e8e:	f000 fb3f 	bl	8001510 <__sflush_r>
 8000e92:	6922      	ldr	r2, [r4, #16]
 8000e94:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8000e96:	6963      	ldr	r3, [r4, #20]
 8000e98:	6a21      	ldr	r1, [r4, #32]
 8000e9a:	6022      	str	r2, [r4, #0]
 8000e9c:	4628      	mov	r0, r5
 8000e9e:	47b0      	blx	r6
 8000ea0:	2800      	cmp	r0, #0
 8000ea2:	6060      	str	r0, [r4, #4]
 8000ea4:	dc1c      	bgt.n	8000ee0 <__srefill_r+0xe0>
 8000ea6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000eaa:	bf17      	itett	ne
 8000eac:	2200      	movne	r2, #0
 8000eae:	f043 0320 	orreq.w	r3, r3, #32
 8000eb2:	6062      	strne	r2, [r4, #4]
 8000eb4:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 8000eb8:	e7bc      	b.n	8000e34 <__srefill_r+0x34>
 8000eba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000ebc:	2900      	cmp	r1, #0
 8000ebe:	d0cd      	beq.n	8000e5c <__srefill_r+0x5c>
 8000ec0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000ec4:	4299      	cmp	r1, r3
 8000ec6:	d002      	beq.n	8000ece <__srefill_r+0xce>
 8000ec8:	4628      	mov	r0, r5
 8000eca:	f000 fa21 	bl	8001310 <_free_r>
 8000ece:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000ed0:	6063      	str	r3, [r4, #4]
 8000ed2:	2000      	movs	r0, #0
 8000ed4:	6360      	str	r0, [r4, #52]	; 0x34
 8000ed6:	2b00      	cmp	r3, #0
 8000ed8:	d0c0      	beq.n	8000e5c <__srefill_r+0x5c>
 8000eda:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8000edc:	6023      	str	r3, [r4, #0]
 8000ede:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ee0:	2000      	movs	r0, #0
 8000ee2:	e7fc      	b.n	8000ede <__srefill_r+0xde>
 8000ee4:	2000000c 	.word	0x2000000c
 8000ee8:	08000de5 	.word	0x08000de5
 8000eec:	20000018 	.word	0x20000018

08000ef0 <setvbuf>:
 8000ef0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8000ef4:	461d      	mov	r5, r3
 8000ef6:	4b54      	ldr	r3, [pc, #336]	; (8001048 <setvbuf+0x158>)
 8000ef8:	681f      	ldr	r7, [r3, #0]
 8000efa:	4604      	mov	r4, r0
 8000efc:	460e      	mov	r6, r1
 8000efe:	4690      	mov	r8, r2
 8000f00:	b127      	cbz	r7, 8000f0c <setvbuf+0x1c>
 8000f02:	6a3b      	ldr	r3, [r7, #32]
 8000f04:	b913      	cbnz	r3, 8000f0c <setvbuf+0x1c>
 8000f06:	4638      	mov	r0, r7
 8000f08:	f7ff feda 	bl	8000cc0 <__sinit>
 8000f0c:	f1b8 0f02 	cmp.w	r8, #2
 8000f10:	d006      	beq.n	8000f20 <setvbuf+0x30>
 8000f12:	f1b8 0f01 	cmp.w	r8, #1
 8000f16:	f200 8094 	bhi.w	8001042 <setvbuf+0x152>
 8000f1a:	2d00      	cmp	r5, #0
 8000f1c:	f2c0 8091 	blt.w	8001042 <setvbuf+0x152>
 8000f20:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000f22:	07da      	lsls	r2, r3, #31
 8000f24:	d405      	bmi.n	8000f32 <setvbuf+0x42>
 8000f26:	89a3      	ldrh	r3, [r4, #12]
 8000f28:	059b      	lsls	r3, r3, #22
 8000f2a:	d402      	bmi.n	8000f32 <setvbuf+0x42>
 8000f2c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000f2e:	f000 f9de 	bl	80012ee <__retarget_lock_acquire_recursive>
 8000f32:	4621      	mov	r1, r4
 8000f34:	4638      	mov	r0, r7
 8000f36:	f000 fb71 	bl	800161c <_fflush_r>
 8000f3a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000f3c:	b141      	cbz	r1, 8000f50 <setvbuf+0x60>
 8000f3e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000f42:	4299      	cmp	r1, r3
 8000f44:	d002      	beq.n	8000f4c <setvbuf+0x5c>
 8000f46:	4638      	mov	r0, r7
 8000f48:	f000 f9e2 	bl	8001310 <_free_r>
 8000f4c:	2300      	movs	r3, #0
 8000f4e:	6363      	str	r3, [r4, #52]	; 0x34
 8000f50:	2300      	movs	r3, #0
 8000f52:	61a3      	str	r3, [r4, #24]
 8000f54:	6063      	str	r3, [r4, #4]
 8000f56:	89a3      	ldrh	r3, [r4, #12]
 8000f58:	0618      	lsls	r0, r3, #24
 8000f5a:	d503      	bpl.n	8000f64 <setvbuf+0x74>
 8000f5c:	6921      	ldr	r1, [r4, #16]
 8000f5e:	4638      	mov	r0, r7
 8000f60:	f000 f9d6 	bl	8001310 <_free_r>
 8000f64:	89a3      	ldrh	r3, [r4, #12]
 8000f66:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
 8000f6a:	f023 0303 	bic.w	r3, r3, #3
 8000f6e:	f1b8 0f02 	cmp.w	r8, #2
 8000f72:	81a3      	strh	r3, [r4, #12]
 8000f74:	d05f      	beq.n	8001036 <setvbuf+0x146>
 8000f76:	ab01      	add	r3, sp, #4
 8000f78:	466a      	mov	r2, sp
 8000f7a:	4621      	mov	r1, r4
 8000f7c:	4638      	mov	r0, r7
 8000f7e:	f000 fb75 	bl	800166c <__swhatbuf_r>
 8000f82:	89a3      	ldrh	r3, [r4, #12]
 8000f84:	4318      	orrs	r0, r3
 8000f86:	81a0      	strh	r0, [r4, #12]
 8000f88:	bb2d      	cbnz	r5, 8000fd6 <setvbuf+0xe6>
 8000f8a:	9d00      	ldr	r5, [sp, #0]
 8000f8c:	4628      	mov	r0, r5
 8000f8e:	f000 fa0b 	bl	80013a8 <malloc>
 8000f92:	4606      	mov	r6, r0
 8000f94:	2800      	cmp	r0, #0
 8000f96:	d150      	bne.n	800103a <setvbuf+0x14a>
 8000f98:	f8dd 9000 	ldr.w	r9, [sp]
 8000f9c:	45a9      	cmp	r9, r5
 8000f9e:	d13e      	bne.n	800101e <setvbuf+0x12e>
 8000fa0:	f04f 35ff 	mov.w	r5, #4294967295
 8000fa4:	2200      	movs	r2, #0
 8000fa6:	60a2      	str	r2, [r4, #8]
 8000fa8:	f104 0247 	add.w	r2, r4, #71	; 0x47
 8000fac:	6022      	str	r2, [r4, #0]
 8000fae:	6122      	str	r2, [r4, #16]
 8000fb0:	2201      	movs	r2, #1
 8000fb2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000fb6:	6162      	str	r2, [r4, #20]
 8000fb8:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000fba:	f043 0302 	orr.w	r3, r3, #2
 8000fbe:	07d1      	lsls	r1, r2, #31
 8000fc0:	81a3      	strh	r3, [r4, #12]
 8000fc2:	d404      	bmi.n	8000fce <setvbuf+0xde>
 8000fc4:	059b      	lsls	r3, r3, #22
 8000fc6:	d402      	bmi.n	8000fce <setvbuf+0xde>
 8000fc8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000fca:	f000 f991 	bl	80012f0 <__retarget_lock_release_recursive>
 8000fce:	4628      	mov	r0, r5
 8000fd0:	b003      	add	sp, #12
 8000fd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000fd6:	2e00      	cmp	r6, #0
 8000fd8:	d0d8      	beq.n	8000f8c <setvbuf+0x9c>
 8000fda:	6a3b      	ldr	r3, [r7, #32]
 8000fdc:	b913      	cbnz	r3, 8000fe4 <setvbuf+0xf4>
 8000fde:	4638      	mov	r0, r7
 8000fe0:	f7ff fe6e 	bl	8000cc0 <__sinit>
 8000fe4:	f1b8 0f01 	cmp.w	r8, #1
 8000fe8:	bf08      	it	eq
 8000fea:	89a3      	ldrheq	r3, [r4, #12]
 8000fec:	6026      	str	r6, [r4, #0]
 8000fee:	bf04      	itt	eq
 8000ff0:	f043 0301 	orreq.w	r3, r3, #1
 8000ff4:	81a3      	strheq	r3, [r4, #12]
 8000ff6:	89a3      	ldrh	r3, [r4, #12]
 8000ff8:	f013 0208 	ands.w	r2, r3, #8
 8000ffc:	e9c4 6504 	strd	r6, r5, [r4, #16]
 8001000:	d01d      	beq.n	800103e <setvbuf+0x14e>
 8001002:	07da      	lsls	r2, r3, #31
 8001004:	bf41      	itttt	mi
 8001006:	2200      	movmi	r2, #0
 8001008:	426d      	negmi	r5, r5
 800100a:	60a2      	strmi	r2, [r4, #8]
 800100c:	61a5      	strmi	r5, [r4, #24]
 800100e:	bf58      	it	pl
 8001010:	60a5      	strpl	r5, [r4, #8]
 8001012:	6e65      	ldr	r5, [r4, #100]	; 0x64
 8001014:	f015 0501 	ands.w	r5, r5, #1
 8001018:	d0d4      	beq.n	8000fc4 <setvbuf+0xd4>
 800101a:	2500      	movs	r5, #0
 800101c:	e7d7      	b.n	8000fce <setvbuf+0xde>
 800101e:	4648      	mov	r0, r9
 8001020:	f000 f9c2 	bl	80013a8 <malloc>
 8001024:	4606      	mov	r6, r0
 8001026:	2800      	cmp	r0, #0
 8001028:	d0ba      	beq.n	8000fa0 <setvbuf+0xb0>
 800102a:	89a3      	ldrh	r3, [r4, #12]
 800102c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001030:	81a3      	strh	r3, [r4, #12]
 8001032:	464d      	mov	r5, r9
 8001034:	e7d1      	b.n	8000fda <setvbuf+0xea>
 8001036:	2500      	movs	r5, #0
 8001038:	e7b4      	b.n	8000fa4 <setvbuf+0xb4>
 800103a:	46a9      	mov	r9, r5
 800103c:	e7f5      	b.n	800102a <setvbuf+0x13a>
 800103e:	60a2      	str	r2, [r4, #8]
 8001040:	e7e7      	b.n	8001012 <setvbuf+0x122>
 8001042:	f04f 35ff 	mov.w	r5, #4294967295
 8001046:	e7c2      	b.n	8000fce <setvbuf+0xde>
 8001048:	20000064 	.word	0x20000064

0800104c <__sread>:
 800104c:	b510      	push	{r4, lr}
 800104e:	460c      	mov	r4, r1
 8001050:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001054:	f000 f8fc 	bl	8001250 <_read_r>
 8001058:	2800      	cmp	r0, #0
 800105a:	bfab      	itete	ge
 800105c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800105e:	89a3      	ldrhlt	r3, [r4, #12]
 8001060:	181b      	addge	r3, r3, r0
 8001062:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001066:	bfac      	ite	ge
 8001068:	6563      	strge	r3, [r4, #84]	; 0x54
 800106a:	81a3      	strhlt	r3, [r4, #12]
 800106c:	bd10      	pop	{r4, pc}

0800106e <__swrite>:
 800106e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001072:	461f      	mov	r7, r3
 8001074:	898b      	ldrh	r3, [r1, #12]
 8001076:	05db      	lsls	r3, r3, #23
 8001078:	4605      	mov	r5, r0
 800107a:	460c      	mov	r4, r1
 800107c:	4616      	mov	r6, r2
 800107e:	d505      	bpl.n	800108c <__swrite+0x1e>
 8001080:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001084:	2302      	movs	r3, #2
 8001086:	2200      	movs	r2, #0
 8001088:	f000 f8d0 	bl	800122c <_lseek_r>
 800108c:	89a3      	ldrh	r3, [r4, #12]
 800108e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001092:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001096:	81a3      	strh	r3, [r4, #12]
 8001098:	4632      	mov	r2, r6
 800109a:	463b      	mov	r3, r7
 800109c:	4628      	mov	r0, r5
 800109e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80010a2:	f000 b8e7 	b.w	8001274 <_write_r>

080010a6 <__sseek>:
 80010a6:	b510      	push	{r4, lr}
 80010a8:	460c      	mov	r4, r1
 80010aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010ae:	f000 f8bd 	bl	800122c <_lseek_r>
 80010b2:	1c43      	adds	r3, r0, #1
 80010b4:	89a3      	ldrh	r3, [r4, #12]
 80010b6:	bf15      	itete	ne
 80010b8:	6560      	strne	r0, [r4, #84]	; 0x54
 80010ba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80010be:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80010c2:	81a3      	strheq	r3, [r4, #12]
 80010c4:	bf18      	it	ne
 80010c6:	81a3      	strhne	r3, [r4, #12]
 80010c8:	bd10      	pop	{r4, pc}

080010ca <__sclose>:
 80010ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010ce:	f000 b89d 	b.w	800120c <_close_r>

080010d2 <__swbuf_r>:
 80010d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010d4:	460e      	mov	r6, r1
 80010d6:	4614      	mov	r4, r2
 80010d8:	4605      	mov	r5, r0
 80010da:	b118      	cbz	r0, 80010e4 <__swbuf_r+0x12>
 80010dc:	6a03      	ldr	r3, [r0, #32]
 80010de:	b90b      	cbnz	r3, 80010e4 <__swbuf_r+0x12>
 80010e0:	f7ff fdee 	bl	8000cc0 <__sinit>
 80010e4:	69a3      	ldr	r3, [r4, #24]
 80010e6:	60a3      	str	r3, [r4, #8]
 80010e8:	89a3      	ldrh	r3, [r4, #12]
 80010ea:	071a      	lsls	r2, r3, #28
 80010ec:	d525      	bpl.n	800113a <__swbuf_r+0x68>
 80010ee:	6923      	ldr	r3, [r4, #16]
 80010f0:	b31b      	cbz	r3, 800113a <__swbuf_r+0x68>
 80010f2:	6823      	ldr	r3, [r4, #0]
 80010f4:	6922      	ldr	r2, [r4, #16]
 80010f6:	1a98      	subs	r0, r3, r2
 80010f8:	6963      	ldr	r3, [r4, #20]
 80010fa:	b2f6      	uxtb	r6, r6
 80010fc:	4283      	cmp	r3, r0
 80010fe:	4637      	mov	r7, r6
 8001100:	dc04      	bgt.n	800110c <__swbuf_r+0x3a>
 8001102:	4621      	mov	r1, r4
 8001104:	4628      	mov	r0, r5
 8001106:	f000 fa89 	bl	800161c <_fflush_r>
 800110a:	b9e0      	cbnz	r0, 8001146 <__swbuf_r+0x74>
 800110c:	68a3      	ldr	r3, [r4, #8]
 800110e:	3b01      	subs	r3, #1
 8001110:	60a3      	str	r3, [r4, #8]
 8001112:	6823      	ldr	r3, [r4, #0]
 8001114:	1c5a      	adds	r2, r3, #1
 8001116:	6022      	str	r2, [r4, #0]
 8001118:	701e      	strb	r6, [r3, #0]
 800111a:	6962      	ldr	r2, [r4, #20]
 800111c:	1c43      	adds	r3, r0, #1
 800111e:	429a      	cmp	r2, r3
 8001120:	d004      	beq.n	800112c <__swbuf_r+0x5a>
 8001122:	89a3      	ldrh	r3, [r4, #12]
 8001124:	07db      	lsls	r3, r3, #31
 8001126:	d506      	bpl.n	8001136 <__swbuf_r+0x64>
 8001128:	2e0a      	cmp	r6, #10
 800112a:	d104      	bne.n	8001136 <__swbuf_r+0x64>
 800112c:	4621      	mov	r1, r4
 800112e:	4628      	mov	r0, r5
 8001130:	f000 fa74 	bl	800161c <_fflush_r>
 8001134:	b938      	cbnz	r0, 8001146 <__swbuf_r+0x74>
 8001136:	4638      	mov	r0, r7
 8001138:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800113a:	4621      	mov	r1, r4
 800113c:	4628      	mov	r0, r5
 800113e:	f000 f805 	bl	800114c <__swsetup_r>
 8001142:	2800      	cmp	r0, #0
 8001144:	d0d5      	beq.n	80010f2 <__swbuf_r+0x20>
 8001146:	f04f 37ff 	mov.w	r7, #4294967295
 800114a:	e7f4      	b.n	8001136 <__swbuf_r+0x64>

0800114c <__swsetup_r>:
 800114c:	b538      	push	{r3, r4, r5, lr}
 800114e:	4b2a      	ldr	r3, [pc, #168]	; (80011f8 <__swsetup_r+0xac>)
 8001150:	4605      	mov	r5, r0
 8001152:	6818      	ldr	r0, [r3, #0]
 8001154:	460c      	mov	r4, r1
 8001156:	b118      	cbz	r0, 8001160 <__swsetup_r+0x14>
 8001158:	6a03      	ldr	r3, [r0, #32]
 800115a:	b90b      	cbnz	r3, 8001160 <__swsetup_r+0x14>
 800115c:	f7ff fdb0 	bl	8000cc0 <__sinit>
 8001160:	89a3      	ldrh	r3, [r4, #12]
 8001162:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001166:	0718      	lsls	r0, r3, #28
 8001168:	d422      	bmi.n	80011b0 <__swsetup_r+0x64>
 800116a:	06d9      	lsls	r1, r3, #27
 800116c:	d407      	bmi.n	800117e <__swsetup_r+0x32>
 800116e:	2309      	movs	r3, #9
 8001170:	602b      	str	r3, [r5, #0]
 8001172:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001176:	81a3      	strh	r3, [r4, #12]
 8001178:	f04f 30ff 	mov.w	r0, #4294967295
 800117c:	e034      	b.n	80011e8 <__swsetup_r+0x9c>
 800117e:	0758      	lsls	r0, r3, #29
 8001180:	d512      	bpl.n	80011a8 <__swsetup_r+0x5c>
 8001182:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001184:	b141      	cbz	r1, 8001198 <__swsetup_r+0x4c>
 8001186:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800118a:	4299      	cmp	r1, r3
 800118c:	d002      	beq.n	8001194 <__swsetup_r+0x48>
 800118e:	4628      	mov	r0, r5
 8001190:	f000 f8be 	bl	8001310 <_free_r>
 8001194:	2300      	movs	r3, #0
 8001196:	6363      	str	r3, [r4, #52]	; 0x34
 8001198:	89a3      	ldrh	r3, [r4, #12]
 800119a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800119e:	81a3      	strh	r3, [r4, #12]
 80011a0:	2300      	movs	r3, #0
 80011a2:	6063      	str	r3, [r4, #4]
 80011a4:	6923      	ldr	r3, [r4, #16]
 80011a6:	6023      	str	r3, [r4, #0]
 80011a8:	89a3      	ldrh	r3, [r4, #12]
 80011aa:	f043 0308 	orr.w	r3, r3, #8
 80011ae:	81a3      	strh	r3, [r4, #12]
 80011b0:	6923      	ldr	r3, [r4, #16]
 80011b2:	b94b      	cbnz	r3, 80011c8 <__swsetup_r+0x7c>
 80011b4:	89a3      	ldrh	r3, [r4, #12]
 80011b6:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80011ba:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80011be:	d003      	beq.n	80011c8 <__swsetup_r+0x7c>
 80011c0:	4621      	mov	r1, r4
 80011c2:	4628      	mov	r0, r5
 80011c4:	f000 fa78 	bl	80016b8 <__smakebuf_r>
 80011c8:	89a0      	ldrh	r0, [r4, #12]
 80011ca:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011ce:	f010 0301 	ands.w	r3, r0, #1
 80011d2:	d00a      	beq.n	80011ea <__swsetup_r+0x9e>
 80011d4:	2300      	movs	r3, #0
 80011d6:	60a3      	str	r3, [r4, #8]
 80011d8:	6963      	ldr	r3, [r4, #20]
 80011da:	425b      	negs	r3, r3
 80011dc:	61a3      	str	r3, [r4, #24]
 80011de:	6923      	ldr	r3, [r4, #16]
 80011e0:	b943      	cbnz	r3, 80011f4 <__swsetup_r+0xa8>
 80011e2:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80011e6:	d1c4      	bne.n	8001172 <__swsetup_r+0x26>
 80011e8:	bd38      	pop	{r3, r4, r5, pc}
 80011ea:	0781      	lsls	r1, r0, #30
 80011ec:	bf58      	it	pl
 80011ee:	6963      	ldrpl	r3, [r4, #20]
 80011f0:	60a3      	str	r3, [r4, #8]
 80011f2:	e7f4      	b.n	80011de <__swsetup_r+0x92>
 80011f4:	2000      	movs	r0, #0
 80011f6:	e7f7      	b.n	80011e8 <__swsetup_r+0x9c>
 80011f8:	20000064 	.word	0x20000064

080011fc <memset>:
 80011fc:	4402      	add	r2, r0
 80011fe:	4603      	mov	r3, r0
 8001200:	4293      	cmp	r3, r2
 8001202:	d100      	bne.n	8001206 <memset+0xa>
 8001204:	4770      	bx	lr
 8001206:	f803 1b01 	strb.w	r1, [r3], #1
 800120a:	e7f9      	b.n	8001200 <memset+0x4>

0800120c <_close_r>:
 800120c:	b538      	push	{r3, r4, r5, lr}
 800120e:	4d06      	ldr	r5, [pc, #24]	; (8001228 <_close_r+0x1c>)
 8001210:	2300      	movs	r3, #0
 8001212:	4604      	mov	r4, r0
 8001214:	4608      	mov	r0, r1
 8001216:	602b      	str	r3, [r5, #0]
 8001218:	f7ff f9a8 	bl	800056c <_close>
 800121c:	1c43      	adds	r3, r0, #1
 800121e:	d102      	bne.n	8001226 <_close_r+0x1a>
 8001220:	682b      	ldr	r3, [r5, #0]
 8001222:	b103      	cbz	r3, 8001226 <_close_r+0x1a>
 8001224:	6023      	str	r3, [r4, #0]
 8001226:	bd38      	pop	{r3, r4, r5, pc}
 8001228:	20000a30 	.word	0x20000a30

0800122c <_lseek_r>:
 800122c:	b538      	push	{r3, r4, r5, lr}
 800122e:	4d07      	ldr	r5, [pc, #28]	; (800124c <_lseek_r+0x20>)
 8001230:	4604      	mov	r4, r0
 8001232:	4608      	mov	r0, r1
 8001234:	4611      	mov	r1, r2
 8001236:	2200      	movs	r2, #0
 8001238:	602a      	str	r2, [r5, #0]
 800123a:	461a      	mov	r2, r3
 800123c:	f7ff f9bd 	bl	80005ba <_lseek>
 8001240:	1c43      	adds	r3, r0, #1
 8001242:	d102      	bne.n	800124a <_lseek_r+0x1e>
 8001244:	682b      	ldr	r3, [r5, #0]
 8001246:	b103      	cbz	r3, 800124a <_lseek_r+0x1e>
 8001248:	6023      	str	r3, [r4, #0]
 800124a:	bd38      	pop	{r3, r4, r5, pc}
 800124c:	20000a30 	.word	0x20000a30

08001250 <_read_r>:
 8001250:	b538      	push	{r3, r4, r5, lr}
 8001252:	4d07      	ldr	r5, [pc, #28]	; (8001270 <_read_r+0x20>)
 8001254:	4604      	mov	r4, r0
 8001256:	4608      	mov	r0, r1
 8001258:	4611      	mov	r1, r2
 800125a:	2200      	movs	r2, #0
 800125c:	602a      	str	r2, [r5, #0]
 800125e:	461a      	mov	r2, r3
 8001260:	f7ff fb32 	bl	80008c8 <_read>
 8001264:	1c43      	adds	r3, r0, #1
 8001266:	d102      	bne.n	800126e <_read_r+0x1e>
 8001268:	682b      	ldr	r3, [r5, #0]
 800126a:	b103      	cbz	r3, 800126e <_read_r+0x1e>
 800126c:	6023      	str	r3, [r4, #0]
 800126e:	bd38      	pop	{r3, r4, r5, pc}
 8001270:	20000a30 	.word	0x20000a30

08001274 <_write_r>:
 8001274:	b538      	push	{r3, r4, r5, lr}
 8001276:	4d07      	ldr	r5, [pc, #28]	; (8001294 <_write_r+0x20>)
 8001278:	4604      	mov	r4, r0
 800127a:	4608      	mov	r0, r1
 800127c:	4611      	mov	r1, r2
 800127e:	2200      	movs	r2, #0
 8001280:	602a      	str	r2, [r5, #0]
 8001282:	461a      	mov	r2, r3
 8001284:	f7ff fb49 	bl	800091a <_write>
 8001288:	1c43      	adds	r3, r0, #1
 800128a:	d102      	bne.n	8001292 <_write_r+0x1e>
 800128c:	682b      	ldr	r3, [r5, #0]
 800128e:	b103      	cbz	r3, 8001292 <_write_r+0x1e>
 8001290:	6023      	str	r3, [r4, #0]
 8001292:	bd38      	pop	{r3, r4, r5, pc}
 8001294:	20000a30 	.word	0x20000a30

08001298 <__errno>:
 8001298:	4b01      	ldr	r3, [pc, #4]	; (80012a0 <__errno+0x8>)
 800129a:	6818      	ldr	r0, [r3, #0]
 800129c:	4770      	bx	lr
 800129e:	bf00      	nop
 80012a0:	20000064 	.word	0x20000064

080012a4 <__libc_init_array>:
 80012a4:	b570      	push	{r4, r5, r6, lr}
 80012a6:	4d0d      	ldr	r5, [pc, #52]	; (80012dc <__libc_init_array+0x38>)
 80012a8:	4c0d      	ldr	r4, [pc, #52]	; (80012e0 <__libc_init_array+0x3c>)
 80012aa:	1b64      	subs	r4, r4, r5
 80012ac:	10a4      	asrs	r4, r4, #2
 80012ae:	2600      	movs	r6, #0
 80012b0:	42a6      	cmp	r6, r4
 80012b2:	d109      	bne.n	80012c8 <__libc_init_array+0x24>
 80012b4:	4d0b      	ldr	r5, [pc, #44]	; (80012e4 <__libc_init_array+0x40>)
 80012b6:	4c0c      	ldr	r4, [pc, #48]	; (80012e8 <__libc_init_array+0x44>)
 80012b8:	f000 fa6c 	bl	8001794 <_init>
 80012bc:	1b64      	subs	r4, r4, r5
 80012be:	10a4      	asrs	r4, r4, #2
 80012c0:	2600      	movs	r6, #0
 80012c2:	42a6      	cmp	r6, r4
 80012c4:	d105      	bne.n	80012d2 <__libc_init_array+0x2e>
 80012c6:	bd70      	pop	{r4, r5, r6, pc}
 80012c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80012cc:	4798      	blx	r3
 80012ce:	3601      	adds	r6, #1
 80012d0:	e7ee      	b.n	80012b0 <__libc_init_array+0xc>
 80012d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80012d6:	4798      	blx	r3
 80012d8:	3601      	adds	r6, #1
 80012da:	e7f2      	b.n	80012c2 <__libc_init_array+0x1e>
 80012dc:	080017dc 	.word	0x080017dc
 80012e0:	080017dc 	.word	0x080017dc
 80012e4:	080017dc 	.word	0x080017dc
 80012e8:	080017e0 	.word	0x080017e0

080012ec <__retarget_lock_init_recursive>:
 80012ec:	4770      	bx	lr

080012ee <__retarget_lock_acquire_recursive>:
 80012ee:	4770      	bx	lr

080012f0 <__retarget_lock_release_recursive>:
 80012f0:	4770      	bx	lr

080012f2 <memcpy>:
 80012f2:	440a      	add	r2, r1
 80012f4:	4291      	cmp	r1, r2
 80012f6:	f100 33ff 	add.w	r3, r0, #4294967295
 80012fa:	d100      	bne.n	80012fe <memcpy+0xc>
 80012fc:	4770      	bx	lr
 80012fe:	b510      	push	{r4, lr}
 8001300:	f811 4b01 	ldrb.w	r4, [r1], #1
 8001304:	f803 4f01 	strb.w	r4, [r3, #1]!
 8001308:	4291      	cmp	r1, r2
 800130a:	d1f9      	bne.n	8001300 <memcpy+0xe>
 800130c:	bd10      	pop	{r4, pc}
	...

08001310 <_free_r>:
 8001310:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001312:	2900      	cmp	r1, #0
 8001314:	d044      	beq.n	80013a0 <_free_r+0x90>
 8001316:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800131a:	9001      	str	r0, [sp, #4]
 800131c:	2b00      	cmp	r3, #0
 800131e:	f1a1 0404 	sub.w	r4, r1, #4
 8001322:	bfb8      	it	lt
 8001324:	18e4      	addlt	r4, r4, r3
 8001326:	f000 f8e7 	bl	80014f8 <__malloc_lock>
 800132a:	4a1e      	ldr	r2, [pc, #120]	; (80013a4 <_free_r+0x94>)
 800132c:	9801      	ldr	r0, [sp, #4]
 800132e:	6813      	ldr	r3, [r2, #0]
 8001330:	b933      	cbnz	r3, 8001340 <_free_r+0x30>
 8001332:	6063      	str	r3, [r4, #4]
 8001334:	6014      	str	r4, [r2, #0]
 8001336:	b003      	add	sp, #12
 8001338:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800133c:	f000 b8e2 	b.w	8001504 <__malloc_unlock>
 8001340:	42a3      	cmp	r3, r4
 8001342:	d908      	bls.n	8001356 <_free_r+0x46>
 8001344:	6825      	ldr	r5, [r4, #0]
 8001346:	1961      	adds	r1, r4, r5
 8001348:	428b      	cmp	r3, r1
 800134a:	bf01      	itttt	eq
 800134c:	6819      	ldreq	r1, [r3, #0]
 800134e:	685b      	ldreq	r3, [r3, #4]
 8001350:	1949      	addeq	r1, r1, r5
 8001352:	6021      	streq	r1, [r4, #0]
 8001354:	e7ed      	b.n	8001332 <_free_r+0x22>
 8001356:	461a      	mov	r2, r3
 8001358:	685b      	ldr	r3, [r3, #4]
 800135a:	b10b      	cbz	r3, 8001360 <_free_r+0x50>
 800135c:	42a3      	cmp	r3, r4
 800135e:	d9fa      	bls.n	8001356 <_free_r+0x46>
 8001360:	6811      	ldr	r1, [r2, #0]
 8001362:	1855      	adds	r5, r2, r1
 8001364:	42a5      	cmp	r5, r4
 8001366:	d10b      	bne.n	8001380 <_free_r+0x70>
 8001368:	6824      	ldr	r4, [r4, #0]
 800136a:	4421      	add	r1, r4
 800136c:	1854      	adds	r4, r2, r1
 800136e:	42a3      	cmp	r3, r4
 8001370:	6011      	str	r1, [r2, #0]
 8001372:	d1e0      	bne.n	8001336 <_free_r+0x26>
 8001374:	681c      	ldr	r4, [r3, #0]
 8001376:	685b      	ldr	r3, [r3, #4]
 8001378:	6053      	str	r3, [r2, #4]
 800137a:	440c      	add	r4, r1
 800137c:	6014      	str	r4, [r2, #0]
 800137e:	e7da      	b.n	8001336 <_free_r+0x26>
 8001380:	d902      	bls.n	8001388 <_free_r+0x78>
 8001382:	230c      	movs	r3, #12
 8001384:	6003      	str	r3, [r0, #0]
 8001386:	e7d6      	b.n	8001336 <_free_r+0x26>
 8001388:	6825      	ldr	r5, [r4, #0]
 800138a:	1961      	adds	r1, r4, r5
 800138c:	428b      	cmp	r3, r1
 800138e:	bf04      	itt	eq
 8001390:	6819      	ldreq	r1, [r3, #0]
 8001392:	685b      	ldreq	r3, [r3, #4]
 8001394:	6063      	str	r3, [r4, #4]
 8001396:	bf04      	itt	eq
 8001398:	1949      	addeq	r1, r1, r5
 800139a:	6021      	streq	r1, [r4, #0]
 800139c:	6054      	str	r4, [r2, #4]
 800139e:	e7ca      	b.n	8001336 <_free_r+0x26>
 80013a0:	b003      	add	sp, #12
 80013a2:	bd30      	pop	{r4, r5, pc}
 80013a4:	20000a38 	.word	0x20000a38

080013a8 <malloc>:
 80013a8:	4b02      	ldr	r3, [pc, #8]	; (80013b4 <malloc+0xc>)
 80013aa:	4601      	mov	r1, r0
 80013ac:	6818      	ldr	r0, [r3, #0]
 80013ae:	f000 b823 	b.w	80013f8 <_malloc_r>
 80013b2:	bf00      	nop
 80013b4:	20000064 	.word	0x20000064

080013b8 <sbrk_aligned>:
 80013b8:	b570      	push	{r4, r5, r6, lr}
 80013ba:	4e0e      	ldr	r6, [pc, #56]	; (80013f4 <sbrk_aligned+0x3c>)
 80013bc:	460c      	mov	r4, r1
 80013be:	6831      	ldr	r1, [r6, #0]
 80013c0:	4605      	mov	r5, r0
 80013c2:	b911      	cbnz	r1, 80013ca <sbrk_aligned+0x12>
 80013c4:	f000 f9d6 	bl	8001774 <_sbrk_r>
 80013c8:	6030      	str	r0, [r6, #0]
 80013ca:	4621      	mov	r1, r4
 80013cc:	4628      	mov	r0, r5
 80013ce:	f000 f9d1 	bl	8001774 <_sbrk_r>
 80013d2:	1c43      	adds	r3, r0, #1
 80013d4:	d00a      	beq.n	80013ec <sbrk_aligned+0x34>
 80013d6:	1cc4      	adds	r4, r0, #3
 80013d8:	f024 0403 	bic.w	r4, r4, #3
 80013dc:	42a0      	cmp	r0, r4
 80013de:	d007      	beq.n	80013f0 <sbrk_aligned+0x38>
 80013e0:	1a21      	subs	r1, r4, r0
 80013e2:	4628      	mov	r0, r5
 80013e4:	f000 f9c6 	bl	8001774 <_sbrk_r>
 80013e8:	3001      	adds	r0, #1
 80013ea:	d101      	bne.n	80013f0 <sbrk_aligned+0x38>
 80013ec:	f04f 34ff 	mov.w	r4, #4294967295
 80013f0:	4620      	mov	r0, r4
 80013f2:	bd70      	pop	{r4, r5, r6, pc}
 80013f4:	20000a3c 	.word	0x20000a3c

080013f8 <_malloc_r>:
 80013f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80013fc:	1ccd      	adds	r5, r1, #3
 80013fe:	f025 0503 	bic.w	r5, r5, #3
 8001402:	3508      	adds	r5, #8
 8001404:	2d0c      	cmp	r5, #12
 8001406:	bf38      	it	cc
 8001408:	250c      	movcc	r5, #12
 800140a:	2d00      	cmp	r5, #0
 800140c:	4607      	mov	r7, r0
 800140e:	db01      	blt.n	8001414 <_malloc_r+0x1c>
 8001410:	42a9      	cmp	r1, r5
 8001412:	d905      	bls.n	8001420 <_malloc_r+0x28>
 8001414:	230c      	movs	r3, #12
 8001416:	603b      	str	r3, [r7, #0]
 8001418:	2600      	movs	r6, #0
 800141a:	4630      	mov	r0, r6
 800141c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001420:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80014f4 <_malloc_r+0xfc>
 8001424:	f000 f868 	bl	80014f8 <__malloc_lock>
 8001428:	f8d8 3000 	ldr.w	r3, [r8]
 800142c:	461c      	mov	r4, r3
 800142e:	bb5c      	cbnz	r4, 8001488 <_malloc_r+0x90>
 8001430:	4629      	mov	r1, r5
 8001432:	4638      	mov	r0, r7
 8001434:	f7ff ffc0 	bl	80013b8 <sbrk_aligned>
 8001438:	1c43      	adds	r3, r0, #1
 800143a:	4604      	mov	r4, r0
 800143c:	d155      	bne.n	80014ea <_malloc_r+0xf2>
 800143e:	f8d8 4000 	ldr.w	r4, [r8]
 8001442:	4626      	mov	r6, r4
 8001444:	2e00      	cmp	r6, #0
 8001446:	d145      	bne.n	80014d4 <_malloc_r+0xdc>
 8001448:	2c00      	cmp	r4, #0
 800144a:	d048      	beq.n	80014de <_malloc_r+0xe6>
 800144c:	6823      	ldr	r3, [r4, #0]
 800144e:	4631      	mov	r1, r6
 8001450:	4638      	mov	r0, r7
 8001452:	eb04 0903 	add.w	r9, r4, r3
 8001456:	f000 f98d 	bl	8001774 <_sbrk_r>
 800145a:	4581      	cmp	r9, r0
 800145c:	d13f      	bne.n	80014de <_malloc_r+0xe6>
 800145e:	6821      	ldr	r1, [r4, #0]
 8001460:	1a6d      	subs	r5, r5, r1
 8001462:	4629      	mov	r1, r5
 8001464:	4638      	mov	r0, r7
 8001466:	f7ff ffa7 	bl	80013b8 <sbrk_aligned>
 800146a:	3001      	adds	r0, #1
 800146c:	d037      	beq.n	80014de <_malloc_r+0xe6>
 800146e:	6823      	ldr	r3, [r4, #0]
 8001470:	442b      	add	r3, r5
 8001472:	6023      	str	r3, [r4, #0]
 8001474:	f8d8 3000 	ldr.w	r3, [r8]
 8001478:	2b00      	cmp	r3, #0
 800147a:	d038      	beq.n	80014ee <_malloc_r+0xf6>
 800147c:	685a      	ldr	r2, [r3, #4]
 800147e:	42a2      	cmp	r2, r4
 8001480:	d12b      	bne.n	80014da <_malloc_r+0xe2>
 8001482:	2200      	movs	r2, #0
 8001484:	605a      	str	r2, [r3, #4]
 8001486:	e00f      	b.n	80014a8 <_malloc_r+0xb0>
 8001488:	6822      	ldr	r2, [r4, #0]
 800148a:	1b52      	subs	r2, r2, r5
 800148c:	d41f      	bmi.n	80014ce <_malloc_r+0xd6>
 800148e:	2a0b      	cmp	r2, #11
 8001490:	d917      	bls.n	80014c2 <_malloc_r+0xca>
 8001492:	1961      	adds	r1, r4, r5
 8001494:	42a3      	cmp	r3, r4
 8001496:	6025      	str	r5, [r4, #0]
 8001498:	bf18      	it	ne
 800149a:	6059      	strne	r1, [r3, #4]
 800149c:	6863      	ldr	r3, [r4, #4]
 800149e:	bf08      	it	eq
 80014a0:	f8c8 1000 	streq.w	r1, [r8]
 80014a4:	5162      	str	r2, [r4, r5]
 80014a6:	604b      	str	r3, [r1, #4]
 80014a8:	4638      	mov	r0, r7
 80014aa:	f104 060b 	add.w	r6, r4, #11
 80014ae:	f000 f829 	bl	8001504 <__malloc_unlock>
 80014b2:	f026 0607 	bic.w	r6, r6, #7
 80014b6:	1d23      	adds	r3, r4, #4
 80014b8:	1af2      	subs	r2, r6, r3
 80014ba:	d0ae      	beq.n	800141a <_malloc_r+0x22>
 80014bc:	1b9b      	subs	r3, r3, r6
 80014be:	50a3      	str	r3, [r4, r2]
 80014c0:	e7ab      	b.n	800141a <_malloc_r+0x22>
 80014c2:	42a3      	cmp	r3, r4
 80014c4:	6862      	ldr	r2, [r4, #4]
 80014c6:	d1dd      	bne.n	8001484 <_malloc_r+0x8c>
 80014c8:	f8c8 2000 	str.w	r2, [r8]
 80014cc:	e7ec      	b.n	80014a8 <_malloc_r+0xb0>
 80014ce:	4623      	mov	r3, r4
 80014d0:	6864      	ldr	r4, [r4, #4]
 80014d2:	e7ac      	b.n	800142e <_malloc_r+0x36>
 80014d4:	4634      	mov	r4, r6
 80014d6:	6876      	ldr	r6, [r6, #4]
 80014d8:	e7b4      	b.n	8001444 <_malloc_r+0x4c>
 80014da:	4613      	mov	r3, r2
 80014dc:	e7cc      	b.n	8001478 <_malloc_r+0x80>
 80014de:	230c      	movs	r3, #12
 80014e0:	603b      	str	r3, [r7, #0]
 80014e2:	4638      	mov	r0, r7
 80014e4:	f000 f80e 	bl	8001504 <__malloc_unlock>
 80014e8:	e797      	b.n	800141a <_malloc_r+0x22>
 80014ea:	6025      	str	r5, [r4, #0]
 80014ec:	e7dc      	b.n	80014a8 <_malloc_r+0xb0>
 80014ee:	605b      	str	r3, [r3, #4]
 80014f0:	deff      	udf	#255	; 0xff
 80014f2:	bf00      	nop
 80014f4:	20000a38 	.word	0x20000a38

080014f8 <__malloc_lock>:
 80014f8:	4801      	ldr	r0, [pc, #4]	; (8001500 <__malloc_lock+0x8>)
 80014fa:	f7ff bef8 	b.w	80012ee <__retarget_lock_acquire_recursive>
 80014fe:	bf00      	nop
 8001500:	20000a34 	.word	0x20000a34

08001504 <__malloc_unlock>:
 8001504:	4801      	ldr	r0, [pc, #4]	; (800150c <__malloc_unlock+0x8>)
 8001506:	f7ff bef3 	b.w	80012f0 <__retarget_lock_release_recursive>
 800150a:	bf00      	nop
 800150c:	20000a34 	.word	0x20000a34

08001510 <__sflush_r>:
 8001510:	898a      	ldrh	r2, [r1, #12]
 8001512:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001516:	4605      	mov	r5, r0
 8001518:	0710      	lsls	r0, r2, #28
 800151a:	460c      	mov	r4, r1
 800151c:	d458      	bmi.n	80015d0 <__sflush_r+0xc0>
 800151e:	684b      	ldr	r3, [r1, #4]
 8001520:	2b00      	cmp	r3, #0
 8001522:	dc05      	bgt.n	8001530 <__sflush_r+0x20>
 8001524:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001526:	2b00      	cmp	r3, #0
 8001528:	dc02      	bgt.n	8001530 <__sflush_r+0x20>
 800152a:	2000      	movs	r0, #0
 800152c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001530:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001532:	2e00      	cmp	r6, #0
 8001534:	d0f9      	beq.n	800152a <__sflush_r+0x1a>
 8001536:	2300      	movs	r3, #0
 8001538:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800153c:	682f      	ldr	r7, [r5, #0]
 800153e:	6a21      	ldr	r1, [r4, #32]
 8001540:	602b      	str	r3, [r5, #0]
 8001542:	d032      	beq.n	80015aa <__sflush_r+0x9a>
 8001544:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001546:	89a3      	ldrh	r3, [r4, #12]
 8001548:	075a      	lsls	r2, r3, #29
 800154a:	d505      	bpl.n	8001558 <__sflush_r+0x48>
 800154c:	6863      	ldr	r3, [r4, #4]
 800154e:	1ac0      	subs	r0, r0, r3
 8001550:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001552:	b10b      	cbz	r3, 8001558 <__sflush_r+0x48>
 8001554:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001556:	1ac0      	subs	r0, r0, r3
 8001558:	2300      	movs	r3, #0
 800155a:	4602      	mov	r2, r0
 800155c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800155e:	6a21      	ldr	r1, [r4, #32]
 8001560:	4628      	mov	r0, r5
 8001562:	47b0      	blx	r6
 8001564:	1c43      	adds	r3, r0, #1
 8001566:	89a3      	ldrh	r3, [r4, #12]
 8001568:	d106      	bne.n	8001578 <__sflush_r+0x68>
 800156a:	6829      	ldr	r1, [r5, #0]
 800156c:	291d      	cmp	r1, #29
 800156e:	d82b      	bhi.n	80015c8 <__sflush_r+0xb8>
 8001570:	4a29      	ldr	r2, [pc, #164]	; (8001618 <__sflush_r+0x108>)
 8001572:	410a      	asrs	r2, r1
 8001574:	07d6      	lsls	r6, r2, #31
 8001576:	d427      	bmi.n	80015c8 <__sflush_r+0xb8>
 8001578:	2200      	movs	r2, #0
 800157a:	6062      	str	r2, [r4, #4]
 800157c:	04d9      	lsls	r1, r3, #19
 800157e:	6922      	ldr	r2, [r4, #16]
 8001580:	6022      	str	r2, [r4, #0]
 8001582:	d504      	bpl.n	800158e <__sflush_r+0x7e>
 8001584:	1c42      	adds	r2, r0, #1
 8001586:	d101      	bne.n	800158c <__sflush_r+0x7c>
 8001588:	682b      	ldr	r3, [r5, #0]
 800158a:	b903      	cbnz	r3, 800158e <__sflush_r+0x7e>
 800158c:	6560      	str	r0, [r4, #84]	; 0x54
 800158e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001590:	602f      	str	r7, [r5, #0]
 8001592:	2900      	cmp	r1, #0
 8001594:	d0c9      	beq.n	800152a <__sflush_r+0x1a>
 8001596:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800159a:	4299      	cmp	r1, r3
 800159c:	d002      	beq.n	80015a4 <__sflush_r+0x94>
 800159e:	4628      	mov	r0, r5
 80015a0:	f7ff feb6 	bl	8001310 <_free_r>
 80015a4:	2000      	movs	r0, #0
 80015a6:	6360      	str	r0, [r4, #52]	; 0x34
 80015a8:	e7c0      	b.n	800152c <__sflush_r+0x1c>
 80015aa:	2301      	movs	r3, #1
 80015ac:	4628      	mov	r0, r5
 80015ae:	47b0      	blx	r6
 80015b0:	1c41      	adds	r1, r0, #1
 80015b2:	d1c8      	bne.n	8001546 <__sflush_r+0x36>
 80015b4:	682b      	ldr	r3, [r5, #0]
 80015b6:	2b00      	cmp	r3, #0
 80015b8:	d0c5      	beq.n	8001546 <__sflush_r+0x36>
 80015ba:	2b1d      	cmp	r3, #29
 80015bc:	d001      	beq.n	80015c2 <__sflush_r+0xb2>
 80015be:	2b16      	cmp	r3, #22
 80015c0:	d101      	bne.n	80015c6 <__sflush_r+0xb6>
 80015c2:	602f      	str	r7, [r5, #0]
 80015c4:	e7b1      	b.n	800152a <__sflush_r+0x1a>
 80015c6:	89a3      	ldrh	r3, [r4, #12]
 80015c8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80015cc:	81a3      	strh	r3, [r4, #12]
 80015ce:	e7ad      	b.n	800152c <__sflush_r+0x1c>
 80015d0:	690f      	ldr	r7, [r1, #16]
 80015d2:	2f00      	cmp	r7, #0
 80015d4:	d0a9      	beq.n	800152a <__sflush_r+0x1a>
 80015d6:	0793      	lsls	r3, r2, #30
 80015d8:	680e      	ldr	r6, [r1, #0]
 80015da:	bf08      	it	eq
 80015dc:	694b      	ldreq	r3, [r1, #20]
 80015de:	600f      	str	r7, [r1, #0]
 80015e0:	bf18      	it	ne
 80015e2:	2300      	movne	r3, #0
 80015e4:	eba6 0807 	sub.w	r8, r6, r7
 80015e8:	608b      	str	r3, [r1, #8]
 80015ea:	f1b8 0f00 	cmp.w	r8, #0
 80015ee:	dd9c      	ble.n	800152a <__sflush_r+0x1a>
 80015f0:	6a21      	ldr	r1, [r4, #32]
 80015f2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80015f4:	4643      	mov	r3, r8
 80015f6:	463a      	mov	r2, r7
 80015f8:	4628      	mov	r0, r5
 80015fa:	47b0      	blx	r6
 80015fc:	2800      	cmp	r0, #0
 80015fe:	dc06      	bgt.n	800160e <__sflush_r+0xfe>
 8001600:	89a3      	ldrh	r3, [r4, #12]
 8001602:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001606:	81a3      	strh	r3, [r4, #12]
 8001608:	f04f 30ff 	mov.w	r0, #4294967295
 800160c:	e78e      	b.n	800152c <__sflush_r+0x1c>
 800160e:	4407      	add	r7, r0
 8001610:	eba8 0800 	sub.w	r8, r8, r0
 8001614:	e7e9      	b.n	80015ea <__sflush_r+0xda>
 8001616:	bf00      	nop
 8001618:	dfbffffe 	.word	0xdfbffffe

0800161c <_fflush_r>:
 800161c:	b538      	push	{r3, r4, r5, lr}
 800161e:	690b      	ldr	r3, [r1, #16]
 8001620:	4605      	mov	r5, r0
 8001622:	460c      	mov	r4, r1
 8001624:	b913      	cbnz	r3, 800162c <_fflush_r+0x10>
 8001626:	2500      	movs	r5, #0
 8001628:	4628      	mov	r0, r5
 800162a:	bd38      	pop	{r3, r4, r5, pc}
 800162c:	b118      	cbz	r0, 8001636 <_fflush_r+0x1a>
 800162e:	6a03      	ldr	r3, [r0, #32]
 8001630:	b90b      	cbnz	r3, 8001636 <_fflush_r+0x1a>
 8001632:	f7ff fb45 	bl	8000cc0 <__sinit>
 8001636:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800163a:	2b00      	cmp	r3, #0
 800163c:	d0f3      	beq.n	8001626 <_fflush_r+0xa>
 800163e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001640:	07d0      	lsls	r0, r2, #31
 8001642:	d404      	bmi.n	800164e <_fflush_r+0x32>
 8001644:	0599      	lsls	r1, r3, #22
 8001646:	d402      	bmi.n	800164e <_fflush_r+0x32>
 8001648:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800164a:	f7ff fe50 	bl	80012ee <__retarget_lock_acquire_recursive>
 800164e:	4628      	mov	r0, r5
 8001650:	4621      	mov	r1, r4
 8001652:	f7ff ff5d 	bl	8001510 <__sflush_r>
 8001656:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001658:	07da      	lsls	r2, r3, #31
 800165a:	4605      	mov	r5, r0
 800165c:	d4e4      	bmi.n	8001628 <_fflush_r+0xc>
 800165e:	89a3      	ldrh	r3, [r4, #12]
 8001660:	059b      	lsls	r3, r3, #22
 8001662:	d4e1      	bmi.n	8001628 <_fflush_r+0xc>
 8001664:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001666:	f7ff fe43 	bl	80012f0 <__retarget_lock_release_recursive>
 800166a:	e7dd      	b.n	8001628 <_fflush_r+0xc>

0800166c <__swhatbuf_r>:
 800166c:	b570      	push	{r4, r5, r6, lr}
 800166e:	460c      	mov	r4, r1
 8001670:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001674:	2900      	cmp	r1, #0
 8001676:	b096      	sub	sp, #88	; 0x58
 8001678:	4615      	mov	r5, r2
 800167a:	461e      	mov	r6, r3
 800167c:	da0d      	bge.n	800169a <__swhatbuf_r+0x2e>
 800167e:	89a3      	ldrh	r3, [r4, #12]
 8001680:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001684:	f04f 0100 	mov.w	r1, #0
 8001688:	bf0c      	ite	eq
 800168a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800168e:	2340      	movne	r3, #64	; 0x40
 8001690:	2000      	movs	r0, #0
 8001692:	6031      	str	r1, [r6, #0]
 8001694:	602b      	str	r3, [r5, #0]
 8001696:	b016      	add	sp, #88	; 0x58
 8001698:	bd70      	pop	{r4, r5, r6, pc}
 800169a:	466a      	mov	r2, sp
 800169c:	f000 f848 	bl	8001730 <_fstat_r>
 80016a0:	2800      	cmp	r0, #0
 80016a2:	dbec      	blt.n	800167e <__swhatbuf_r+0x12>
 80016a4:	9901      	ldr	r1, [sp, #4]
 80016a6:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80016aa:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80016ae:	4259      	negs	r1, r3
 80016b0:	4159      	adcs	r1, r3
 80016b2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80016b6:	e7eb      	b.n	8001690 <__swhatbuf_r+0x24>

080016b8 <__smakebuf_r>:
 80016b8:	898b      	ldrh	r3, [r1, #12]
 80016ba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80016bc:	079d      	lsls	r5, r3, #30
 80016be:	4606      	mov	r6, r0
 80016c0:	460c      	mov	r4, r1
 80016c2:	d507      	bpl.n	80016d4 <__smakebuf_r+0x1c>
 80016c4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80016c8:	6023      	str	r3, [r4, #0]
 80016ca:	6123      	str	r3, [r4, #16]
 80016cc:	2301      	movs	r3, #1
 80016ce:	6163      	str	r3, [r4, #20]
 80016d0:	b002      	add	sp, #8
 80016d2:	bd70      	pop	{r4, r5, r6, pc}
 80016d4:	ab01      	add	r3, sp, #4
 80016d6:	466a      	mov	r2, sp
 80016d8:	f7ff ffc8 	bl	800166c <__swhatbuf_r>
 80016dc:	9900      	ldr	r1, [sp, #0]
 80016de:	4605      	mov	r5, r0
 80016e0:	4630      	mov	r0, r6
 80016e2:	f7ff fe89 	bl	80013f8 <_malloc_r>
 80016e6:	b948      	cbnz	r0, 80016fc <__smakebuf_r+0x44>
 80016e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80016ec:	059a      	lsls	r2, r3, #22
 80016ee:	d4ef      	bmi.n	80016d0 <__smakebuf_r+0x18>
 80016f0:	f023 0303 	bic.w	r3, r3, #3
 80016f4:	f043 0302 	orr.w	r3, r3, #2
 80016f8:	81a3      	strh	r3, [r4, #12]
 80016fa:	e7e3      	b.n	80016c4 <__smakebuf_r+0xc>
 80016fc:	89a3      	ldrh	r3, [r4, #12]
 80016fe:	6020      	str	r0, [r4, #0]
 8001700:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001704:	81a3      	strh	r3, [r4, #12]
 8001706:	9b00      	ldr	r3, [sp, #0]
 8001708:	6163      	str	r3, [r4, #20]
 800170a:	9b01      	ldr	r3, [sp, #4]
 800170c:	6120      	str	r0, [r4, #16]
 800170e:	b15b      	cbz	r3, 8001728 <__smakebuf_r+0x70>
 8001710:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001714:	4630      	mov	r0, r6
 8001716:	f000 f81d 	bl	8001754 <_isatty_r>
 800171a:	b128      	cbz	r0, 8001728 <__smakebuf_r+0x70>
 800171c:	89a3      	ldrh	r3, [r4, #12]
 800171e:	f023 0303 	bic.w	r3, r3, #3
 8001722:	f043 0301 	orr.w	r3, r3, #1
 8001726:	81a3      	strh	r3, [r4, #12]
 8001728:	89a3      	ldrh	r3, [r4, #12]
 800172a:	431d      	orrs	r5, r3
 800172c:	81a5      	strh	r5, [r4, #12]
 800172e:	e7cf      	b.n	80016d0 <__smakebuf_r+0x18>

08001730 <_fstat_r>:
 8001730:	b538      	push	{r3, r4, r5, lr}
 8001732:	4d07      	ldr	r5, [pc, #28]	; (8001750 <_fstat_r+0x20>)
 8001734:	2300      	movs	r3, #0
 8001736:	4604      	mov	r4, r0
 8001738:	4608      	mov	r0, r1
 800173a:	4611      	mov	r1, r2
 800173c:	602b      	str	r3, [r5, #0]
 800173e:	f7fe ff21 	bl	8000584 <_fstat>
 8001742:	1c43      	adds	r3, r0, #1
 8001744:	d102      	bne.n	800174c <_fstat_r+0x1c>
 8001746:	682b      	ldr	r3, [r5, #0]
 8001748:	b103      	cbz	r3, 800174c <_fstat_r+0x1c>
 800174a:	6023      	str	r3, [r4, #0]
 800174c:	bd38      	pop	{r3, r4, r5, pc}
 800174e:	bf00      	nop
 8001750:	20000a30 	.word	0x20000a30

08001754 <_isatty_r>:
 8001754:	b538      	push	{r3, r4, r5, lr}
 8001756:	4d06      	ldr	r5, [pc, #24]	; (8001770 <_isatty_r+0x1c>)
 8001758:	2300      	movs	r3, #0
 800175a:	4604      	mov	r4, r0
 800175c:	4608      	mov	r0, r1
 800175e:	602b      	str	r3, [r5, #0]
 8001760:	f7fe ff20 	bl	80005a4 <_isatty>
 8001764:	1c43      	adds	r3, r0, #1
 8001766:	d102      	bne.n	800176e <_isatty_r+0x1a>
 8001768:	682b      	ldr	r3, [r5, #0]
 800176a:	b103      	cbz	r3, 800176e <_isatty_r+0x1a>
 800176c:	6023      	str	r3, [r4, #0]
 800176e:	bd38      	pop	{r3, r4, r5, pc}
 8001770:	20000a30 	.word	0x20000a30

08001774 <_sbrk_r>:
 8001774:	b538      	push	{r3, r4, r5, lr}
 8001776:	4d06      	ldr	r5, [pc, #24]	; (8001790 <_sbrk_r+0x1c>)
 8001778:	2300      	movs	r3, #0
 800177a:	4604      	mov	r4, r0
 800177c:	4608      	mov	r0, r1
 800177e:	602b      	str	r3, [r5, #0]
 8001780:	f7fe ff28 	bl	80005d4 <_sbrk>
 8001784:	1c43      	adds	r3, r0, #1
 8001786:	d102      	bne.n	800178e <_sbrk_r+0x1a>
 8001788:	682b      	ldr	r3, [r5, #0]
 800178a:	b103      	cbz	r3, 800178e <_sbrk_r+0x1a>
 800178c:	6023      	str	r3, [r4, #0]
 800178e:	bd38      	pop	{r3, r4, r5, pc}
 8001790:	20000a30 	.word	0x20000a30

08001794 <_init>:
 8001794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001796:	bf00      	nop
 8001798:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800179a:	bc08      	pop	{r3}
 800179c:	469e      	mov	lr, r3
 800179e:	4770      	bx	lr

080017a0 <_fini>:
 80017a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80017a2:	bf00      	nop
 80017a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80017a6:	bc08      	pop	{r3}
 80017a8:	469e      	mov	lr, r3
 80017aa:	4770      	bx	lr
